{{> header title='Release Notes | ' }}

<!-- TODO Style should match installation page, it doesn't quite do this... -->
<main class="grey-bg">

  <h1 class="margin-bottom large-title">Release Notes</h1>

  <div class="align-left support">

    <div class="anchor">
      <a href="#introduction" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><a id="introduction">Introduction</a></h2>
    </div>
    <div class="margin-bottom">
      <h3>OpenJDK Release Notes</h3>
      <p>
        The release notes below are taken from the official release announcements in the appropriate OpenJDK mailing list. 
        Any extra Eclipse Temurin only issues will be clearly demarcated using an Eclipse Temurin heading.
      </p>
    </div>

    <div class="anchor">
      <a href="#jdk8u312" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><button type="button" onclick="showHideReleaseNotes('jdk8u312_notes');">-/+</button> <a id="jdk8u312">OpenJDK 8u312 (1.8.0_312-b07)</a></h2>
    </div>
    <div class="margin-bottom softHide" id="jdk8u312_notes">

      Here is the list of changes in jdk8u312. For more information on any of these,
      <a href="https://bugs.openjdk.java.net/browse/JDK-8275549?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%20openjdk8u312%20ORDER%20BY%20created%20DESC">
      look at JBS</a>.

      <ul>
        <li> JDK-8275549: Unable to read certain PKCS12 keystores from SequenceInputStream</li>
        <li> JDK-8275538: Update the default enabled cipher suites preference</li>
        <li> JDK-8273734: half-closed SSLEngine status may cause application dead loop</li>
        <li> JDK-8273689: TCP Connection Reset when connecting simple socket to SSL server</li>
        <li> JDK-8273088: Cgroup v1 initialization causes NullPointerException when cgroup path contains colon</li>
        <li> JDK-8273086: AARCH64: GHASH intrinsic is not optimal</li>
        <li> JDK-8273085: aarch64: add support for GHASH acceleration</li>
        <li> JDK-8272719: java/util/logging/ParentLoggersTest.java failed with "checkLoggers: getLoggerNames() returned unexpected loggers"</li>
        <li> JDK-8272714: [8u] Build failure after backport of JDK-8248901 with MSVC 2013</li>
        <li> JDK-8272643: Backout JDK-8176837 from 8u312</li>
        <li> JDK-8272621: JVM crashes when calling getStackTrace if stack contains a method that is a member of a very large class</li>
        <li> JDK-8272612: Update SunPKCS11 provider with PKCS11 v3.0 header files</li>
        <li> JDK-8272575: java.lang.NullPointerException: HDC for component at sun.java2d.loops.Blit.Blit</li>
        <li> JDK-8272555: Strange behavior of URLConnection with proxy</li>
        <li> JDK-8272542: assert(_handle_mark_nesting > 1) failed: memory leak: allocating handle outside HandleMark</li>
        <li> JDK-8272540: stack-use-after-scope in NewObjectA</li>
        <li> JDK-8272495: Java MIDI fails with a dereferenced memory error when asked to send a raw 0xF7</li>
        <li> JDK-8272456: com.sun.net.HttpsServer spins on TLS session close</li>
        <li> JDK-8272379: OperatingSystemMXBean getProcessCpuLoad reports incorrect process cpu usage in containers</li>
        <li> JDK-8272368: Kerberos Credential Retrieval from Cache not Working in Cross-Realm Setup</li>
        <li> JDK-8272214: [8u] Build failure after backport of JDK-8248901</li>
        <li> JDK-8272057: TEST_BUG: the retry logic in RMID.start() should check that the subprocess hasn't terminated</li>
        <li> JDK-8272056: [8u] [macos] build failure in OpenJDK8u after JDK-8211301 in older xcode</li>
        <li> JDK-8272055: Initialization race in sun.security.x509.AlgorithmId.get</li>
        <li> JDK-8271612: JNI functions incorrectly return a double after JDK-8265836</li>
        <li> JDK-8271505: AArch64: size_fits_all_mem_uses should return false if its output is a CAS</li>
        <li> JDK-8271466: [jdk8u] StackGap test fails on aarch64 due to "-m64"</li>
        <li> JDK-8270379: Signed immediate support in .../share/assembler.hpp is broken.</li>
        <li> JDK-8270055: Build failure after JDK-8264752 with older GCCs</li>
        <li> JDK-8269987: keytool -v -list print is incorrect after backport JDK-8141457</li>
        <li> JDK-8269966: default build of jdk8 fails on newer GCCs with warnings as errors on format-overflow</li>
        <li> JDK-8269965: JDK-8269388 breaks the build on older GCCs</li>
        <li> JDK-8269964: [8u] Enable Xcode 12 builds on macOS</li>
        <li> JDK-8269960: Add expiry exception for identrustdstx3 alias to VerifyCACerts.java test</li>
        <li> JDK-8269953: config.log is not in build directory after 8u backport of JDK-8079891</li>
        <li> JDK-8269928: configure fails if you create an empty directory and then run configure from it</li>
        <li> JDK-8269927: Store configure log in $BUILD/configure.log</li>
        <li> JDK-8269926: The new implementation of Robot.waitForIdle() may hang</li>
        <li> JDK-8269925: NPE in sun.awt.SunToolkit.getWindowDeactivationTime</li>
        <li> JDK-8269915: Print warning summary at end of configure</li>
        <li> JDK-8269876: NullPointerException in sun.security.ssl.HKDF.extract(HKDF.java:93)</li>
        <li> JDK-8269875: getSystemCpuLoad() returns -1 on linux when some offline cpus are present and cpusets.effective_cpus is not available</li>
        <li> JDK-8269874: OperatingSystemImpl.getCpuLoad() returns incorrect CPU load inside a container</li>
        <li> JDK-8269859: BacktraceBuilder._cprefs needs to be accessed as unsigned short</li>
        <li> JDK-8269810: [8u] Update generated_configure.sh after JDK-8250876 backport</li>
        <li> JDK-8269515: Deadlock between URLStreamHandler.getHostAddress and file.Handler.openconnection</li>
        <li> JDK-8269484: Test fails on OSX with java.lang.RuntimeException 'Narrow klass base: 0x0000000000000000, Narrow klass shift: 3' missing</li>
        <li> JDK-8269430: SIGFPE crash with option FlightRecorderOptions:threadbuffersize=30M</li>
        <li> JDK-8269367: jdk/jfr/event/gc/detailed/TestPromotionFailedEventWithParallelScavenge.java failed with "OutOfMemoryError: Java heap space"</li>
        <li> JDK-8269366: SoftMainMixer.processAudioBuffers(): Wrong handling of stoppedMixers</li>
        <li> JDK-8269242: Performance problem in sun.reflect.generics.parser.SignatureParser</li>
        <li> JDK-8269241: (reflect) Optimize SignatureParser's use of StringBuilders</li>
        <li> JDK-8269169: SunPKCS11-Solaris provider tests failing on Solaris 11.4</li>
        <li> JDK-8269132: compiler/uncommontrap/TestSpecTrapClassUnloading.java fails with: GC triggered before VM initialization completed</li>
        <li> JDK-8269094: [TESTBUG] Test java/awt/Mouse/GetMousePositionTest/GetMousePositionWithPopup.java fails</li>
        <li> JDK-8269093: sun/java2d/GdiRendering/InsetClipping.java fails</li>
        <li> JDK-8268550: DefaultCellEditor for comboBox creates ActionEvent with wrong source object</li>
        <li> JDK-8268479: A PKCS12 keystore from Java 8 using custom PBE parameters cannot be read in Java 11</li>
        <li> JDK-8268477: PBES2 AlgorithmId encoding error in PKCS12 KeyStore</li>
        <li> JDK-8268476: fix pkcs11 P11_DEBUG guarded native traces</li>
        <li> JDK-8268453: sun/security/pkcs12/EmptyPassword.java fails with Sequence tag error</li>
        <li> JDK-8268449: java/net/ipv6tests/UdpTest.java failed intermittently</li>
        <li> JDK-8268445: Watch registry changes for remote printers update instead of polling</li>
        <li> JDK-8268112: Native crash in Win32PrintServiceLookup.getAllPrinterNames()</li>
        <li> JDK-8268107: Incorrect JNU_ReleaseStringPlatformChars in Windows Print</li>
        <li> JDK-8268055: Create new switch to redirect error reporting output to stdout or stderr</li>
        <li> JDK-8267978: java/net/MulticastSocket/TestInterfaces.java failed due to unexpected IP address</li>
        <li> JDK-8265978: make test should look for more locations when searching for exit code</li>
      </ul>
    </div>

    <div class="anchor">
      <a href="#jdk11_0_13" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><button type="button"
onclick="showHideReleaseNotes('jdk11_0_13_notes');">-/+</button> <a
id="jdk11_0_13">OpenJDK 11.0.13+8</a></h2>
    </div>
    <div class="margin-bottom softHide" id="jdk11_0_13_notes">

      Here is the list of changes in jdk 11.0.13+8. For more details on any specific entry
      <a href="https://bugs.openjdk.java.net/browse/JDK-8275564?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2011.0.13%20ORDER%20BY%20created%20DESC">
      look at JBS</a>.

      <ul>
        <li> JDK-8275564: Unable to read certain PKCS12 keystores from SequenceInputStream</li>
        <li> JDK-8274354: Most JDK releases report macOS version 12 as 10.16 instead of 12.0</li>
        <li> JDK-8273939: Backport of 8248414 to JDK11 breaks MacroAssembler::adrp</li>
        <li> JDK-8273078: Some java.net tests failed with NoRouteToHostException on MacOS with special network configuration</li>
        <li> JDK-8273077: Refactor some annotation processor tests to better use collections</li>
        <li> JDK-8273076: Add explicit timeout to several HTTP Client tests</li>
        <li> JDK-8273075: test/jdk/java/net/Socket/LingerTest.java fails with cleaning up</li>
        <li> JDK-8273074: java/net/DatagramSocket/ReportSocketClosed.java fails intermittently with BindException</li>
        <li> JDK-8273073: java/net/MulticastSocket/UnreferencedMulticastSockets.java fails with "incorrect data received"</li>
        <li> JDK-8273055: [macos] Crash occurs on JPasswordField with activated InputMethod</li>
        <li> JDK-8273036: RunThese24H.java failed with EXCEPTION_ACCESS_VIOLATION in java_lang_Thread::get_thread_status</li>
        <li> JDK-8272989: Forward output from heap dumper to jcmd/jmap</li>
        <li> JDK-8272986: AArch64: Shenandoah C1 CAS is not sequentially consistent</li>
        <li> JDK-8272967: [macos] Build failure with Xcode 13.0 after JDK-8264848</li>
        <li> JDK-8272913: [TEST] Wrong classname in vmTestbase/nsk/stress/except/except002 and except003</li>
        <li> JDK-8272911: Remove review suggestion from fix to 8219804</li>
        <li> JDK-8272910: java/net/MulticastSocket/Promiscuous.java fails intermittently due to NumberFormatException</li>
        <li> JDK-8272909: Shenandoah: streamline post-LRB CAS barrier (aarch64)</li>
        <li> JDK-8272906: [JVMCI] c2v_iterateFrames can get out of sync with the StackFrameStream</li>
        <li> JDK-8272904: backward focus traversal gets stuck in button group</li>
        <li> JDK-8272900: --with-harfbuzz=system doesn't add -lharfbuzz after JDK-8255790</li>
        <li> JDK-8272898: StackGuardPages test doesn't build with glibc 2.34</li>
        <li> JDK-8272897: Shenandoah: Optimize gc/shenandoah/TestRefprocSanity.java for interpreter mode</li>
        <li> JDK-8272896: AArch64: gc/shenandoah/TestVerifyJCStress.java fails intermittently with C1</li>
        <li> JDK-8272895: Shenandoah: gc/shenandoah/mxbeans tests should be more resilient</li>
        <li> JDK-8272889: Two NestedDialogs tests fail on Ubuntu</li>
        <li> JDK-8272888: Update the link in test/jdk/sun/security/provider/SecureRandom/DrbgCavp.java</li>
        <li> JDK-8272790: [macOS] not all KEY_PRESSED events sent when control modifier is used</li>
        <li> JDK-8272787: Cgroup v1 initialization causes NullPointerException when cgroup path contains colon</li>
        <li> JDK-8272786: [JVMCI] add helper to perform Java upcalls</li>
        <li> JDK-8272772: Shenandoah: compiler/c2/aarch64/TestVolatilesShenandoah.java fails in 11u</li>
        <li> JDK-8272652: Test convenience reactive primitives from java.net.http with RS TCK</li>
        <li> JDK-8272648: Add forgotten test/jdk/java/net/httpclient/BodySubscribersTest.java</li>
        <li> JDK-8272628: Problemlist gc/stress/gcbasher/TestGCBasherWithCMS.java for x86_32</li>
        <li> JDK-8272490: Remove IdenTrust certificate that is expiring in September 2021</li>
        <li> JDK-8272489: Remove oopDesc::equals()</li>
        <li> JDK-8272488: Refactor java/util/prefs/CheckUserPrefsStorage.sh to plain java test</li>
        <li> JDK-8272487: Refactor sun.text.IntHashtable:i18n shell tests to plain java tests</li>
        <li> JDK-8272486: [TEST_BUG] Test test/jdk/java/awt/font/TextLayout/ArabicDiacriticTest.java can leave frame open</li>
        <li> JDK-8272485: [TEST_BUG] sun/security/mscapi/nonUniqueAliases/NonUniqueAliases.java failed with incorrect jtreg tags order</li>
        <li> JDK-8272484: Harden tests sun/security/x509/URICertStore/ExtensionsWithLDAP.java and krb5/canonicalize/Test.java</li>
        <li> JDK-8272471: PhaseMacroExpand::generate_slow_arraycopy crash when clone null CallProjections.fallthrough_ioproj</li>
        <li> JDK-8272442: temp files left by tests in jdk/java/net/httpclient</li>
        <li> JDK-8272441: Update the host name in CNameTest.java</li>
        <li> JDK-8272440: Refactor shell test java/util/ServiceLoader/basic/basic.sh to java</li>
        <li> JDK-8272435: Refactor java/util/prefs/PrefsSpi.sh to plain java test</li>
        <li> JDK-8272434: Update terminology in java.awt.GridBagLayout source code comments</li>
        <li> JDK-8272433: Refactor java.util.PluggableLocale:i18n shell tests to plain java tests</li>
        <li> JDK-8272432: SourceDebugExtensionTest fails to rename file</li>
        <li> JDK-8272431: Refactor java.util.Calendar:i18n shell tests to plain java tests</li>
        <li> JDK-8272430: Test `ADatagramSocket.java` missing /othervm from @run tag</li>
        <li> JDK-8272429: opening jar file with large manifest might throw NegativeArraySizeException</li>
        <li> JDK-8272428: test/jdk/sun/net/www/http/HttpClient/MultiThreadTest.java fails intermittently when cleaning up</li>
        <li> JDK-8272427: sun/security/tools/jarsigner/warnings/NoTimestampTest.java failed due to unexpected expiration date</li>
        <li> JDK-8272426: typo in test filename</li>
        <li> JDK-8272425: TCKLocalTime.java failed due to "AssertionError: expected [18:14:22] but found [18:14:23]"</li>
        <li> JDK-8272424: Make test AsyncCloseChannel.java run in othervm</li>
        <li> JDK-8272423: java/nio/channels/SocketChannel/AsyncCloseChannel.java fails with threads that didn't exit</li>
        <li> JDK-8272422: tools/launcher/Test7029048.java fails (Solaris)</li>
        <li> JDK-8272421: Move sun/net/www/protocol/http/GetErrorStream.java to OpenJDK</li>
        <li> JDK-8272420: Some launcher tests assume a pre-JDK 9 run-time image layout</li>
        <li> JDK-8272419: Incorrect 512-bit vector registers restore on x86_32</li>
        <li> JDK-8272418: AbstractConnectTimeout should tolerate both NoRouteToHostException and UnresolvedAddressException</li>
        <li> JDK-8272416: Potential race between Logger configuration and GCs in HttpURLConWithProxy test</li>
        <li> JDK-8272415: Test Timeout.java should run in othervm mode</li>
        <li> JDK-8272414: Add automated test for fix done in JDK-8218469</li>
        <li> JDK-8272412: Add automated testcase for fix done in JDK-8214253</li>
        <li> JDK-8272411: Add automated test for fix done in JDK-8218479</li>
        <li> JDK-8272410: Add automated test for fix done in JDK-8218472</li>
        <li> JDK-8272409: Add automated testcases for changes done in JDK-8214112</li>
        <li> JDK-8272408: Align stdout messages in test/jdk/java/math/BigInteger/PrimitiveConversionTests.java</li>
        <li> JDK-8272338: Kerberos Credential Retrieval from Cache not Working in Cross-Realm Setup</li>
        <li> JDK-8272197: Update 11u GHA workflow with Shenandoah configurations</li>
        <li> JDK-8272159: GTKL&amp;F: Java 16 crashes on initialising GTKL&amp;F on Manjaro Linux</li>
        <li> JDK-8272130: narrow allowSmartActionArgs disabling</li>
        <li> JDK-8272129: bump jtreg requiredVersion to b14</li>
        <li> JDK-8272128: bump jtreg requiredVersion to b14 in test/jdk/sanity/client/</li>
        <li> JDK-8272127: bump jtreg requiredVersion to 4.2b16</li>
        <li> JDK-8272126: switch to jtreg 5.0</li>
        <li> JDK-8272125: switch to jtreg 5.1</li>
        <li> JDK-8272110: Improve AlgorithmConstraints:checkAlgorithm performance</li>
        <li> JDK-8272078: Wrong Checksums in Temurin BootJDK dependencies</li>
        <li> JDK-8272075: Remove file seeking requirement for writing a heap dump</li>
        <li> JDK-8272032: Update docs on building for Git</li>
        <li> JDK-8272013: Archive important test outputs in submit workflow</li>
        <li> JDK-8272012: Add Linux x86_32 tier1 to submit workflow</li>
        <li> JDK-8272011: Avoid running GitHub actions on branches named pr/*</li>
        <li> JDK-8272010: GitHub actions still fail on Linux x86_32 with "Could not configure libc6:i386"</li>
        <li> JDK-8272009: GitHub actions fail on Linux x86_32 with "Could not configure libc6:i386"</li>
        <li> JDK-8272008: GitHub actions should use MSVC 14.28</li>
        <li> JDK-8272007: Submit workflow should apt-get update to avoid package installation errors</li>
        <li> JDK-8272006: GitHub Actions: decouple the hotspot build-only jobs from Linux x64 testing</li>
        <li> JDK-8272005: Github Actions build on Linux should define OS and GCC versions</li>
        <li> JDK-8272004: add optimized build to submit workflow</li>
        <li> JDK-8272003: Github Action build on Windows should define OS and MSVC versions</li>
        <li> JDK-8272002: Github Action build on macOS should define OS and Xcode versions</li>
        <li> JDK-8272001: Add cross-compiled foreign architectures builds to submit workflow</li>
        <li> JDK-8272000: Submit workflow artifacts miss hs_errs/replays due to ZIP include mismatch</li>
        <li> JDK-8271999: Submit workflow artifact name is always "test-results_.zip"</li>
        <li> JDK-8271998: Add Linux x86_32 builds to submit workflow</li>
        <li> JDK-8271997: Build no-pch configuration in debug mode for submit checks</li>
        <li> JDK-8271996: Add Zero, Minimal hotspot targets to submit workflow</li>
        <li> JDK-8271995: Pre-submit testing using GitHub Actions should not use the deprecated set-env command</li>
        <li> JDK-8271994: Pre-submit testing using GitHub Actions does not detect failures reliably</li>
        <li> JDK-8271993: Add support for running pre-submit testing using GitHub Actions</li>
        <li> JDK-8271980: tools/javac/launcher/SourceLauncherTest.java fails on Windows</li>
        <li> JDK-8271961: ARM: cleanup maybe-uninitialized and reorder compiler warnings</li>
        <li> JDK-8271960: Add more known library locations to simplify Linux cross-compilation</li>
        <li> JDK-8271958: problem list compiler/c2/Test8004741.java</li>
        <li> JDK-8271957: linux 32 bit build doesn't compile libjdwp/log_messages.c</li>
        <li> JDK-8271936: Compilation error due to wrong usage of NSPrintJobDispositionValue in mac10.12</li>
        <li> JDK-8271929: javac may report an invalid package/class clash on case insensitive filesystems</li>
        <li> JDK-8271901: add possibility to build with Visual Studio 2019</li>
        <li> JDK-8271889: Support for side by side MSVC Toolset versions</li>
        <li> JDK-8271885: IndexOutOfBoundsException while reading large TIFF file</li>
        <li> JDK-8271879: Provide print to a file (PDF) feature even when printer was not connected</li>
        <li> JDK-8271850: Remove Access::equals()</li>
        <li> JDK-8271849: Make all of DependencyContext_test available in product mode</li>
        <li> JDK-8271848: AssertionError in sun.net.httpserver.ServerImpl.responseCompleted</li>
        <li> JDK-8271847: Update keytool to create AKID from the SKID of the issuing certificate as specified by RFC 5280</li>
        <li> JDK-8271823: Heap dumps should exclude dormant CDS archived objects of unloaded classes</li>
        <li> JDK-8271736: AARCH64: typo in LIR_Assembler::emit_profile_type</li>
        <li> JDK-8271735: C2: assert(n != __null) failed: Bad immediate dominator info.</li>
        <li> JDK-8271608: OperatingSystemMXBean getProcessCpuLoad reports incorrect process cpu usage in containers</li>
        <li> JDK-8271604: git needs .gitattributes</li>
        <li> JDK-8271571: AArch64: Backtracing broken on PAC enabled systems</li>
        <li> JDK-8271558: Examine the HttpResponse.BodySubscribers for null handling and multiple subscriptions</li>
        <li> JDK-8271541: Wrong caret position in JTextPane on Windows with a screen resolution > 100%</li>
        <li> JDK-8271540: Password is being converted to String in AccessibleJPasswordField</li>
        <li> JDK-8271511: Printed GlyphVector outline with low DPI has bad quality on Windows</li>
        <li> JDK-8271416: Do not use objc_msgSend_stret to get macOS version</li>
        <li> JDK-8271393: C2: Out of bounds array load floats above its range check in loop peeling resulting in SEGV</li>
        <li> JDK-8271388: test/jdk/java/lang/Package/PackageFromManifest.java missing module dependencies declaration</li>
        <li> JDK-8271387: Refactor shell test javax/naming/module/basic.sh to java</li>
        <li> JDK-8271385: Refactor java/util/zip/ZipFile/deletetempjar.sh to plain java test</li>
        <li> JDK-8271384: Test java/net/Inet6Address/serialize/Inet6AddressSerializationTest.java fails intermittently</li>
        <li> JDK-8271383: C2: Node is wrongly marked as reduction resulting in a wrong execution due to wrong vector instructions</li>
        <li> JDK-8271382: Refactor jdk/internal/reflect/Reflection/GetCallerClassTest.sh to plain java test</li>
        <li> JDK-8271381: jdk/internal/jrtfs/remote/RemoteRuntimeImageTest.java fails with java.lang.NullPointerException</li>
        <li> JDK-8271379: tools/jdeps/DotFileTest.java fails on Win-X64</li>
        <li> JDK-8271378: java/nio/channels/spi/SelectorProvider/inheritedChannel/InheritedChannelTest.java failed</li>
        <li> JDK-8271376: Shenandoah: name gang tasks consistently</li>
        <li> JDK-8271375: Shenandoah: re-organize saving/restoring machine state in assembler code</li>
        <li> JDK-8271327: Update Apache Santuario (XML Signature) to version 2.2.1</li>
        <li> JDK-8271322: Rewrite gc/epsilon/TestClasses.java to use Metaspace with less classes</li>
        <li> JDK-8271300: C2: assert(n != __null) failed: Bad immediate dominator info.</li>
        <li> JDK-8271299: Optimize gc-locker in [Get|Release]StringCritical for latin string</li>
        <li> JDK-8271298: JNI_GetStringCritical does not lock char array</li>
        <li> JDK-8271214: Add option to jcmd GC.heap_dump to use existing file</li>
        <li> JDK-8271212: ECDSA SignatureValue do not always have the specified length </li>
        <li> JDK-8271211: serviceability/attach/RemovingUnixDomainSocketTest.java fails "stderr was not empty"</li>
        <li> JDK-8271210: serviceability/attach/RemovingUnixDomainSocketTest.java fails with AttachNotSupportedException: Unable to open socket file</li>
        <li> JDK-8271200: TCP Connection Reset when connecting simple socket to SSL server</li>
        <li> JDK-8271145: jvmti/DataDumpRequest/datadumpreq001 failed due to "exit code is 134"</li>
        <li> JDK-8271144: Minimal VM: set_state is not a member of AttachListener</li>
        <li> JDK-8271143: Multiple AttachListener threads can be created</li>
        <li> JDK-8271135: test/lib/jdk/test/lib/security/KeyStoreUtils.java should allow to specify aliases</li>
        <li> JDK-8271095: C4530 was reported from VS 2019 at access bridge</li>
        <li> JDK-8271058: java/util/Locale/bcp47u/SystemPropertyTests.java failed on Mac 10.13 with zh_CN and zh_TW locales.</li>
        <li> JDK-8271057: Make tools/javac/api/T6265137.java robust to JDK version changes</li>
        <li> JDK-8271023: Incorrect copyright header in Apache Santuario 2.1.3 files</li>
        <li> JDK-8271022: NullPointerException in JKS keystore</li>
        <li> JDK-8271002: AArch64: Fix MacroAssembler::get_thread convention</li>
        <li> JDK-8270994: bug in monitor locking/unlocking on ARM32 C1 due to uninitialized BasicObjectLock::_displaced_header</li>
        <li> JDK-8270934: com.sun.net.HttpsServer spins on TLS session close</li>
        <li> JDK-8270906: Exclude security/infra/java/security/cert/CertPathValidator/certification/LetsEncryptCA</li>
        <li> JDK-8270905: Remove unused buffer int</li>
        <li> JDK-8270900: Pasting Unicode characters into JShell does not work.</li>
        <li> JDK-8270538: [REDO] C2 crash when compile negative Arrays.copyOf length after loop</li>
        <li> JDK-8270537: Regression ~5% in spec2005 in b27</li>
        <li> JDK-8270534: C2: nested locks optimization may create unbalanced monitor enter/exit code</li>
        <li> JDK-8270462: stack-use-after-scope in NewObjectA</li>
        <li> JDK-8270458: InfiniteLoopException test may fail on x86 platforms</li>
        <li> JDK-8270375: [aarch64] java.library.path not including /usr/lib64</li>
        <li> JDK-8270354: C2 compilation fails with assert "missing precedence edge"</li>
        <li> JDK-8270353: C2: java/text/Normalizer/ConformanceTest.java test failed with assertion</li>
        <li> JDK-8270311: [TESTBUG] Add coverage for jvmci ResolvedJavaType.toJavaName() for lambdas</li>
        <li> JDK-8270304: jdk/javadoc/tool/6176978/T6176978.java uses @ignore w/o bug-id</li>
        <li> JDK-8270303: jdk/javadoc/tool/LangVers.java uses @ignore w/o bug-id</li>
        <li> JDK-8270302: jdk/javadoc/tool/InlineTagsWithBraces.java uses @ignore w/o bug-id</li>
        <li> JDK-8270299: Add test from JDK-8268360</li>
        <li> JDK-8270263: Relax compiler/floatingpoint/NaNTest.java for x86_32 and lower -XX:+UseSSE</li>
        <li> JDK-8270262: Verify @AfterTest is used correctly in WebSocket tests</li>
        <li> JDK-8270261: Upgrade ReceiveISA.java test to be resilient to failure due to stray packets and interference</li>
        <li> JDK-8270260: Using env of JAVA_TOOL_OPTIONS and _JAVA_OPTIONS breaks QuietOption.java test</li>
        <li> JDK-8270242: Corrupt oop in ClassLoaderData</li>
        <li> JDK-8270196: [11u] [JVMCI] JavaType.toJavaName() returns incorrect type name for lambdas</li>
        <li> JDK-8270181: NMT should not limit baselining by size threshold</li>
        <li> JDK-8270178: SPARC64 detection fails on Athena (SPARC64-X)</li>
        <li> JDK-8270176: Doing GC during JVMTI MethodExit event posting breaks return oop</li>
        <li> JDK-8270166: Missing check for infinite loop during node placement</li>
        <li> JDK-8270095: SIGSEGV in PhaseCFG::implicit_null_check due to missing null check</li>
        <li> JDK-8270081: block_if_requested is not proper inlined due to size</li>
        <li> JDK-8270079: CTW: C1 fails with "State must not be null"</li>
        <li> JDK-8270077: Shenandoah: LRB needs to save/restore fp registers for runtime call</li>
        <li> JDK-8270008: Crash in JfrTraceIdLoadBarrier::load(_jclass*)</li>
        <li> JDK-8269950: fix ctw stand-alone build</li>
        <li> JDK-8269880: Avoid recording "pc" in unhandled oops detector for better performance</li>
        <li> JDK-8269877: [JVMCI] add some thread local fields for use by JVMCI</li>
        <li> JDK-8269864: CheckUnhandledOops is broken in MemAllocator</li>
        <li> JDK-8269862: Zero: build fails without JVMTI</li>
        <li> JDK-8269861: CDS address sanitizer errors</li>
        <li> JDK-8269860: Add expiry exception for identrustdstx3 alias to VerifyCACerts.java test</li>
        <li> JDK-8269858: Zero: VM should know it runs in interpreter-only mode</li>
        <li> JDK-8269857: Add more tests for SSLSocket input/output shutdown</li>
        <li> JDK-8269856: Remove unimplemented CompileBroker methods after JEP-165</li>
        <li> JDK-8269847: JDK-8269594 backport breaks 11u builds</li>
        <li> JDK-8269812: assert(_handle_mark_nesting > 1) failed: memory leak: allocating handle outside HandleMark</li>
        <li> JDK-8269755: Fatal error report generated with -XX:+CrashOnOutOfMemoryError should not contain suggestion to submit a bug report</li>
        <li> JDK-8269742: Incorrect calculation of has_fpu_registers in C1 linear scan</li>
        <li> JDK-8269741: [s390] Interpreter checks wrong bit for slow path instance allocation</li>
        <li> JDK-8269740: sun/security/ssl/SSLSocketImpl/SSLSocketImplThrowsWrongExceptions. SSL test failures caused by java failed with "Server reported the wrong exception"</li>
        <li> JDK-8269739: javax/swing/reliability/HangDuringStaticInitialization.java fails in Windows debug build</li>
        <li> JDK-8269733: Update the default enabled cipher suites preference</li>
        <li> JDK-8269702: AArch64: Backtracing broken on PAC enabled systems</li>
        <li> JDK-8269584: Shenandoah: Add test for JDK-8268127</li>
        <li> JDK-8269483: Epsilon: Minor typo in EpsilonElasticTLABDecay description</li>
        <li> JDK-8269479: Font with missed font family name is not properly printed on Windows</li>
        <li> JDK-8269415: [11u] Remove ea from DEFAULT_PROMOTED_VERSION_PRE in OpenJDK 11u</li>
        <li> JDK-8269391: AArch64: initialize memory allocated for locals according to Windows AArch64 stack page growth requirement in template interpreter</li>
        <li> JDK-8269382: Implicit null check optimization does not update control of hoisted memory operation</li>
        <li> JDK-8269379: Shenandoah: reconsider pacing updates memory ordering</li>
        <li> JDK-8269378: Shenandoah: Use shorter instruction sequence for checking if marking in progress</li>
        <li> JDK-8269377: Shenandoah: fix an incorrect assert</li>
        <li> JDK-8269370: JShell fails and exits when statement throws an exception whose message contains a '%'.</li>
        <li> JDK-8269358: [TESTBUG] ReturnBlobToWrongHeapTest.java failed allocating blob</li>
        <li> JDK-8269355: Incorrect annotations.without.processors warnings with JDK 9</li>
        <li> JDK-8269338: Improve performance of charset decoding when charset is always compactable</li>
        <li> JDK-8269317: C2: inconsistent spilling due to dead nodes in exception block</li>
        <li> JDK-8269298: ChaCha20 and Poly1305 TLS Cipher Suites</li>
        <li> JDK-8269292: Incorrect jdeps message "jdk8internals" to describe a removed JDK internal API</li>
        <li> JDK-8269236: Build failure after JDK-8264752 with older GCCs</li>
        <li> JDK-8269227: JVMCI: findUniqueConcreteMethod should handle statically bindable methods directly</li>
        <li> JDK-8269221: (test) jtreg.SkippedException has no serial VersionUID</li>
        <li> JDK-8269183: java/util/logging/ParentLoggersTest.java failed with "checkLoggers: getLoggerNames() returned unexpected loggers"</li>
        <li> JDK-8269182: Create an IPv4 version of java/net/MulticastSocket/SetLoopbackMode.java</li>
        <li> JDK-8269109: SIGFPE crash with option FlightRecorderOptions:threadbuffersize=30M</li>
        <li> JDK-8269082: SIGSEGV in PackageEntry::purge_qualified_exports()</li>
        <li> JDK-8269080: Remove static initialization of monitor/mutex instances</li>
        <li> JDK-8269079: Compilation failure in PLATFORM_API_MacOSX_MidiUtils.c with Xcode 12.5</li>
        <li> JDK-8268892: jdk/jfr/event/gc/detailed/TestPromotionFailedEventWithParallelScavenge.java failed with "OutOfMemoryError: Java heap space"</li>
        <li> JDK-8268891: assert root method not found in witnessed_reabstraction_in_supers is too strong</li>
        <li> JDK-8268889: Shenandoah: Heap size may be too small for region to align to large page size</li>
        <li> JDK-8268872: private methods are allocated vtable indices</li>
        <li> JDK-8268819: SA: Remove libthread_db dependency on Linux</li>
        <li> JDK-8268741: JNI functions incorrectly return a double after JDK-8265836</li>
        <li> JDK-8268700: NPE in ToolProvider.getSystemJavaCompiler</li>
        <li> JDK-8268617: [11u REDO] - WebSocket over authenticating proxy fails with NPE</li>
        <li> JDK-8268771: javadoc -notimestamp option does not work on index.html</li>
        <li> JDK-8268607: JVMCI: findUniqueConcreteMethod() should not use Dependencies::find_unique_concrete_method() for non-virtual methods</li>
        <li> JDK-8268604: Some code emitted by TemplateTable::branch is unused when running TieredCompilation</li>
        <li> JDK-8268603: AArch64: When CallLeaf, no need to preserve callee-saved registers in caller</li>
        <li> JDK-8268462: Update Mesa 3-D Headers to version 21.0.3</li>
        <li> JDK-8268396: CDS archive with 4K alignment unusable on machines with 64k pages</li>
        <li> JDK-8268338: PhaseStringOpts::int_stringSize doesn't handle min_jint correctly</li>
        <li> JDK-8268271: Compiler crashes because of illegal signature in otherwise legal code</li>
        <li> JDK-8268264: Improve ResolvedMethodTable hash function</li>
        <li> JDK-8268255: Make IsClassUnloadingEnabled signature match specification</li>
        <li> JDK-8268254: Remove HotSpot deprecation warning suppression for Mac/clang</li>
        <li> JDK-8268253: Remove obsolete code in AWTView.m</li>
        <li> JDK-8268244: C2 incorrectly folds subtype checks involving an interface array</li>
        <li> JDK-8268239: Remove some dead comments from os_bsd_x86</li>
        <li> JDK-8268179: (fc) ReadDirect and WriteDirect tests fail after fix for JDK-8264821</li>
        <li> JDK-8268057: getSystemCpuLoad() returns -1 on linux when some offline cpus are present and cpusets.effective_cpus is not available</li>
        <li> JDK-8268048: OperatingSystemImpl.getCpuLoad() returns incorrect CPU load inside a container</li>
        <li> JDK-8267994: javax/swing/JComboBox/8032878/bug8032878.java fails</li>
        <li> JDK-8267977: Upgrade HarfBuzz to the latest 2.8.0</li>
        <li> JDK-8267695: Bump update version for OpenJDK: jdk-11.0.13</li>
        <li> JDK-8267234: Enhance native libs for AWT and Swing to work with GraalVM Native Image</li>
        <li> JDK-8264184: JVMCI: Enable it for Windows+AArch64</li>
        <li> JDK-8264182: AArch64: Get rid of --disable-warnings-as-errors on Windows+ARM64 build</li>
        <li> JDK-8254645: AArch64: follow up for JDK-8248414</li>
        <li> JDK-8254644: C1: Fix signature conflict in LIRGenerator::strength_reduce_multiply</li>
        <li> JDK-8254643: AArch64: Avoid MIN/MAX macros when using MSVC</li>
        <li> JDK-8254642: AArch64: Use THREAD_LOCAL instead of __thread</li>
        <li> JDK-8254641: AArch64: Remove unused variables</li>
        <li> JDK-8254640: AArch64: Remove uses of long and unsigned long ints</li>
        <li> JDK-8254638: AArch64: Use ATTRIBUTE_ALIGNED helper</li>
        <li> JDK-8254636: Windows: strengthening in ThreadCritical regarding memory model</li>
        <li> JDK-8254635: AArch64: Remove uses of kernel integer types</li>
        <li> JDK-8253947: Implementation: JEP 388: Windows AArch64 Support</li>
      </ul>

    </div>

    <div class="anchor">
      <a href="#jdk17_0_1" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><button type="button" onclick="showHideReleaseNotes('jdk17_0_1_notes');">-/+</button> <a id="jdk17_0_1">OpenJDK 17.0.1+12</a></h2>
    </div>
    <div class="margin-bottom softHide" id="jdk17_0_1_notes">

      Here is the list of changes in jdk 17.0.1+12. For more details on any specific entry
      <a href="https://bugs.openjdk.java.net/browse/JDK-8275444?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2017.0.1%20ORDER%20BY%20created%20DESC">
      look at JBS</a>.

      <ul>
        <li> JDK-8275444: Release Note: Release Doesn't Correctly Recognize Windows 11</li>
        <li> JDK-8275046: Refer to JEP 378 in Programmer's Guide to Text Blocks</li>
        <li> JDK-8273851: macOS Monterey does not have the font Times needed by Serif</li>
        <li> JDK-8273819: Update JSSE Reference Guide with new properties to disable TLS extensions</li>
        <li> JDK-8273399: Revert "8225083: Remove Google certificate that is expiring in December 2021"</li>
        <li> JDK-8273213: [Test]: java/net/httpclient/DigestEchoClientSSL.java contains redundant @run tags</li>
        <li> JDK-8273212: sun/security/pkcs11/Provider/MultipleLogins.sh fails after JDK-8266182</li>
        <li> JDK-8273211: Automate manual steps listed in the test jdk/sun/security/pkcs12/ParamsTest.java</li>
        <li> JDK-8273210: RunThese24H.java failed with EXCEPTION_ACCESS_VIOLATION in java_lang_Thread::get_thread_status</li>
        <li> JDK-8273209: [macOS] "Apple AWT Internal Exception" when input method is changed</li>
        <li> JDK-8273208: Session resumption errors</li>
        <li> JDK-8273207: Shenandoah: Resolve UNKNOWN access strength, where possible</li>
        <li> JDK-8272960: [macos] Build failure with Xcode 13.0 after JDK-8264848</li>
        <li> JDK-8272959: Kerberos Credential Retrieval from Cache not Working in Cross-Realm Setup</li>
        <li> JDK-8272955: StackGuardPages test doesn't build with glibc 2.34</li>
        <li> JDK-8272954: [Test]: Cleanup: test/jdk/security/infra/java/security/cert/CertPathValidator/certification/BuypassCA.java no longer needs ocspEnabled</li>
        <li> JDK-8272953: Shenandoah: Optimize gc/shenandoah/TestRefprocSanity.java for interpreter mode</li>
        <li> JDK-8272952: Shenandoah: Provide human-readable labels for test configurations</li>
        <li> JDK-8272951: Shenandoah: gc/shenandoah/mxbeans tests should be more resilient</li>
        <li> JDK-8272950: [macOS] not all KEY_PRESSED events sent when control modifier is used</li>
        <li> JDK-8272949: java/util/Random/RandomTestMoments.java had two Gaussian fails</li>
        <li> JDK-8272948: security/infra/java/security/cert/CertPathValidator/certification/QuoVadisCA.java fails, Certificate has been revoked</li>
        <li> JDK-8272947: security/infra/java/security/cert/CertPathValidator/certification/LetsEncryptCA.java OCSP response error</li>
        <li> JDK-8272946: jtreg test security/infra/java/security/cert/CertPathValidator/certification/BuypassCA.java fails</li>
        <li> JDK-8272686: Remove Google certificate that is expiring in December 2021</li>
        <li> JDK-8272685: Cgroup v1 initialization causes NullPointerException when cgroup path contains colon</li>
        <li> JDK-8272684: PhaseMacroExpand::generate_slow_arraycopy crash when clone null CallProjections.fallthrough_ioproj</li>
        <li> JDK-8272683: C2: assert(iff->Opcode() == Op_If || iff->Opcode() == Op_CountedLoopEnd || iff->Opcode() == Op_RangeCheck) failed: Check this code when new subtype is added</li>
        <li> JDK-8272682: C2: Wrong JVM state used for receiver null check</li>
        <li> JDK-8272681: [IR Framework] Some default regexes matching on PrintOptoAssembly in IRNode.java do not work on all platforms</li>
        <li> JDK-8272680: ZGC: Arraycopy stub passes invalid oop to load barrier</li>
        <li> JDK-8272679: C2: assert(no_dead_loop) failed: dead loop detected</li>
        <li> JDK-8272678: ZGC: ZBarrierSetC2::clone_at_expansion fails with "Guard against surprises" assert</li>
        <li> JDK-8272677: Repeatable annotations without @Target cannot have containers that target module declarations</li>
        <li> JDK-8272676: --with-harfbuzz=system doesn't add -lharfbuzz after JDK-8255790</li>
        <li> JDK-8272675: Fatal error with variable shift count integer rotate operation.</li>
        <li> JDK-8272536: Release Note: Removed IdenTrust Root Certificate</li>
        <li> JDK-8272211: Final nroff manpage update for JDK 17</li>
        <li> JDK-8272210: JFR Recorder Thread crashed with SIGSEGV in write_klass</li>
        <li> JDK-8272209: ProblemList serviceability/sa/TestJmapCore.java on linux-x64 with ZGC</li>
        <li> JDK-8272208: ProblemList javax/swing/JComponent/7154030/bug7154030.java in JDK17</li>
        <li> JDK-8272207: ProblemList jdk/jfr/event/gc/detailed/TestEvacuationFailedEvent.java in JDK17</li>
        <li> JDK-8272206: ZGC several jvm08 perf regressions after JDK-8268372</li>
        <li> JDK-8272205: Improve AlgorithmConstraints:checkAlgorithm performance</li>
        <li> JDK-8272204: OperatingSystemMXBean getProcessCpuLoad reports incorrect process cpu usage in containers</li>
        <li> JDK-8272203: AARCH64: typo in LIR_Assembler::emit_profile_type</li>
        <li> JDK-8272200: [TESTBUG] Rename Whitebox API package</li>
        <li> JDK-8271818: C2: Avoid redundant uncommon traps in GraphKit::builtin_throw() for JVMTI exception events</li>
        <li> JDK-8271817: C2: assert(n != __null) failed: Bad immediate dominator info.</li>
        <li> JDK-8271816: Remove EA from JDK 17 version string starting with Initial RC promotion on Aug 5, 2021(B34)</li>
        <li> JDK-8271815: C2: assert(!had_error) failed: bad dominance</li>
        <li> JDK-8271814: ProblemList serviceability/sa/sadebugd/DebugdConnectTest.java due to 8270326</li>
        <li> JDK-8271813: ProblemList SA tests that are failing with ZGC due to JDK-8248912</li>
        <li> JDK-8271812: (doc) Clarify Filter Factory example</li>
        <li> JDK-8271811: mark hotspot runtime/memory tests which ignore external VM flags</li>
        <li> JDK-8271810: mark hotspot runtime/os tests which ignore external VM flags</li>
        <li> JDK-8271809: ProblemList 2 locale tests on macOS-x64</li>
        <li> JDK-8271808: ProblemList javax/sound/midi/Sequencer/Looping.java</li>
        <li> JDK-8271807: JavaThread::java_suspend() fails with "fatal error: Illegal threadstate encountered: 6"</li>
        <li> JDK-8271806: runtime/ClassFile/UnsupportedClassFileVersion.java can be run in driver mode</li>
        <li> JDK-8271805: Extend jcc erratum mitigation to additional processors</li>
        <li> JDK-8271804: TestParallelRefProc fails on single core machines</li>
        <li> JDK-8271803: runtime/Safepoint tests use OutputAnalyzer::shouldMatch instead of shouldContaint</li>
        <li> JDK-8271802: NPE in DocTreePath.getTreePath()</li>
        <li> JDK-8271801: SEGV at read_string_field(oopDesc*, char const*, JavaThread*)+0x54</li>
        <li> JDK-8271800: two runtime/ClassFile tests don't check exit code</li>
        <li> JDK-8271799: UnicodeReader not translating \u005c\\u005d to \\]</li>
        <li> JDK-8271798: runtime/jni/FindClassUtf8/FindClassUtf8.java doesn't have to be run in othervm</li>
        <li> JDK-8271797: two runtime/Monitor tests don't check exit code</li>
        <li> JDK-8271796: java/awt/Focus/DeiconifiedFrameLoosesFocus/DeiconifiedFrameLoosesFocus.java sometimes failed on ubuntu</li>
        <li> JDK-8271795: [macos] JTabbedPane title looks like disabled</li>
        <li> JDK-8271794: serviceability/jvmti/GetObjectSizeClass.java doesn't check exit code</li>
        <li> JDK-8271793: runtime/handshake/HandshakeTimeoutTest.java can be run in driver mode</li>
        <li> JDK-8271792: runtime/StackTrace/LargeClassTest.java can be run in driver mode</li>
        <li> JDK-8271791: runtime/handshake/HandshakeTimeoutTest.java test doesn't check exit code</li>
        <li> JDK-8271790: runtime/Safepoint/TestAbortVMOnSafepointTimeout.java can be run in driver mode</li>
        <li> JDK-8271789: runtime/jni/checked/TestCheckedJniExceptionCheck.java doesn't set -Djava.library.path</li>
        <li> JDK-8271788: Wrong path separator in env variable</li>
        <li> JDK-8271787: Update java.lang.annotation.Target for changes in JLS 9.6.4.1</li>
        <li> JDK-8271786: runtime/duplAttributes/DuplAttributesTest.java doesn't check exit code</li>
        <li> JDK-8271785: remove deadcode from runtime/Thread/TestThreadDumpSMRInfo.java test</li>
        <li> JDK-8271784: Suspend during block transition may deadlock if lock held</li>
        <li> JDK-8271783: ProblemList runtime/InvocationTests/invokevirtualTests.java</li>
        <li> JDK-8271782: ZGC: Invalid oop passed to ZBarrierSetRuntime::load_barrier_on_oop_array</li>
        <li> JDK-8271772: JFR: Docs for -XX:StartFlightRecording is incorrect</li>
        <li> JDK-8271768: a few runtime/memory tests don't check exit code</li>
        <li> JDK-8271766: [TEST_BUG] Failure on solaris of java/awt/Window/MultiWindowApp/MultiWindowAppTest.java</li>
        <li> JDK-8271757: ProblemList 3 client tests on Linux-X64</li>
        <li> JDK-8271756: Missing forward declaration of ZeroFrame</li>
        <li> JDK-8271754: Problemlist vmTestbase/nsk/jdi/HiddenClass/events/events001.java</li>
        <li> JDK-8271753: java/foreign/stackwalk/TestAsyncStackWalk.java test failed with concurrent GC</li>
        <li> JDK-8271751: C2: assert(false) failed: bad AD file after JDK-8267687</li>
        <li> JDK-8271749: Remove IdenTrust certificate that is expiring in September 2021</li>
        <li> JDK-8271335: Updating RE Configs for BUILD REQUEST 17.0.1+4</li>
        <li> JDK-8271285: jarsigner doc is not precise when describing jar file re-signing</li>
        <li> JDK-8271213: Add option to jcmd GC.heap_dump to use existing file</li>
        <li> JDK-8271204: stack-use-after-scope in NewObjectA</li>
        <li> JDK-8270922: C2: assert(false) failed: Bad graph detected in build_loop_late</li>
        <li> JDK-8270921: Problem List java/awt/Window/MultiWindowApp/MultiWindowAppTest.java on Linux</li>
        <li> JDK-8270920: Exclude security/infra/java/security/cert/CertPathValidator/certification/LetsEncryptCA</li>
        <li> JDK-8270919: Corrupt oop in ClassLoaderData</li>
        <li> JDK-8270899: Remove unused buffer int</li>
        <li> JDK-8270895: [macOS] Exception from "Printable.print" is swallowed during "PrinterJob.print"</li>
        <li> JDK-8270790: [PIT][macosx] Failure of closed/java/awt/FontClass/FontStringBounds.java</li>
        <li> JDK-8270779: Typo in file name in example for -Xlint:processing</li>
        <li> JDK-8270777: [JNI] Clarify the specification in relation to portable use of APIs that involve the Primitive Array Release Modes</li>
        <li> JDK-8270774: javapath/java.exe strips double quotes from command line args</li>
        <li> JDK-8270767: Additional tests for MessageDigest with different providers</li>
        <li> JDK-8270766: Test build/AbsPathsInImage.java fails after JDK-8259848</li>
        <li> JDK-8270765: (JEP-356) - RandomGenerator spec implementation requirements tightly coupled to JDK internal classes</li>
        <li> JDK-8270764: SplittableRandom extends AbstractSplittableGenerator</li>
        <li> JDK-8270763: [macosx-aarch64] Crash with SIGBUS in MarkActivationClosure::do_code_blob during vmTestbase/nsk/jvmti/.../bi04t002 test run</li>
        <li> JDK-8270762: Handling type arguments from outer classes for inner class in javadoc</li>
        <li> JDK-8270761: InfiniteLoopException test may fail on x86 platforms</li>
        <li> JDK-8270760: Async UL needs to handle ERANGE on exceeding SEM_VALUE_MAX</li>
        <li> JDK-8270759: Generated lambda class can not access protected static method of target class</li>
        <li> JDK-8270758: DynamicCallSiteDesc::withArgs doesn't throw NPE</li>
        <li> JDK-8270757: [TESTBUG] Add coverage for jvmci ResolvedJavaType.toJavaName() for lambdas</li>
        <li> JDK-8270756: java/foreign/Test{Down,Up}call.java time out</li>
        <li> JDK-8270755: Stress test SEGV while emitting OldObjectSample</li>
        <li> JDK-8270754: Deadlock during Volano with JFR</li>
        <li> JDK-8270753: Interim javadoc build does not support platform links</li>
        <li> JDK-8270752: C2: Out of bounds array load floats above its range check in loop peeling resulting in SEGV</li>
        <li> JDK-8270751: Missing build dependency between jdk.jfr-gendata and buildtools-hotspot</li>
        <li> JDK-8270750: (fs) Custom DefaultFileSystemProvider security related loops</li>
        <li> JDK-8270749: serviceability/sa/Clhsdb tests are using a C2 specific VMStruct field</li>
        <li> JDK-8270748: TCP Connection Reset when connecting simple socket to SSL server</li>
        <li> JDK-8270747: fix of JDK-8252657 missed to update history at the end of JVM TI spec</li>
        <li> JDK-8270746: [macOS] Update named used for Java run loop mode</li>
        <li> JDK-8270745: Cleanup Override in Context-Specific Deserialization Filters</li>
        <li> JDK-8270744: C2: Node is wrongly marked as reduction resulting in a wrong execution due to wrong vector instructions</li>
        <li> JDK-8270743: IncompatibleClassChangeError on empty pattern switch statement case</li>
        <li> JDK-8270742: Switch statement with a pattern, constant and default label elements crash javac</li>
        <li> JDK-8270741: Missing unreported constraints on pattern and other case label combination</li>
        <li> JDK-8270740: compiler/vectorapi/VectorCastShape*Test.java tests failed on avx2 machines</li>
        <li> JDK-8270739: Update Platform.isDefaultCDSArchiveSupported() to return true for aarch64 platforms</li>
        <li> JDK-8270738: NPE in HtmlDocletWriter</li>
        <li> JDK-8270737: ProblemList 4 SA tests on macOS-aarch64</li>
        <li> JDK-8270736: ByteArrayInputStream#read with a byte array of length 0 not consistent with InputStream when at EOF</li>
        <li> JDK-8270735: AssertionError when combining pattern matching and function closure</li>
        <li> JDK-8270734: corrections in some instruction patterns for KNL x86 platform</li>
        <li> JDK-8270733: Desugaring of pattern matching enum switch should be improved</li>
        <li> JDK-8270732: Switches with 'case null:' should be exhaustive</li>
        <li> JDK-8270731: C2: assert(!in->is_CFG()) failed: CFG Node with no controlling input?</li>
        <li> JDK-8270730: (test) Add diagnostic info to ProceessBuilder/Basic.java for unexpected output</li>
        <li> JDK-8270729: Directories in /opt/runtimepackagetest and /path/to/jdk-17 are different</li>
        <li> JDK-8270728: [PPC64] C2: Math.rint intrinsic uses wrong rounding mode</li>
        <li> JDK-8270727: (jdeprscan) tools/jdeprscan/tests/jdk/jdeprscan/TestRelease.java failed with "error: cannot access jdk.internal.ValueBased"</li>
        <li> JDK-8270726: class file for sun.misc.Contended not found</li>
        <li> JDK-8270725: [macos-aarch64] test compilation failed with "SocketException: No buffer space available"</li>
        <li> JDK-8270724: jshell throws exception while parsing illegal "case true"</li>
        <li> JDK-8270723: javac generates class with invalid stack map</li>
        <li> JDK-8270722: javac fails to compile nested pattern matching switches</li>
        <li> JDK-8270721: SA's vm object vtable matching code sometimes matches on incorrect type</li>
        <li> JDK-8270720: CDS check_excluded_classes needs DumpTimeTable_lock</li>
        <li> JDK-8270719: [TESTBUG] Missing testing for x86 KNL platforms</li>
        <li> JDK-8270718: ProblemList compiler/vectorapi/VectorCastShape[64|128]Test.java tests on x86</li>
        <li> JDK-8270717: AArch64: 'bad AD file' in some vector conversion tests</li>
        <li> JDK-8270716: Clarify the behavior of System::gc w.r.t. reference processing</li>
        <li> JDK-8270715: JVM crashes when running VectorMask query tests</li>
        <li> JDK-8270714: Optimize gc-locker in [Get|Release]StringCritical for latin string</li>
        <li> JDK-8270713: JNI_GetStringCritical does not lock char array</li>
        <li> JDK-8270712: C2: assert(false) failed: graph should be schedulable after JDK-8252372</li>
        <li> JDK-8270711: C2: assert(false) failed: unscheduable graph</li>
        <li> JDK-8270710: SIGSEGV in PhaseCFG::implicit_null_check due to missing null check</li>
        <li> JDK-8270709: jdk/jfr/jcmd/TestJcmdDump.java with slowdebug bits fails with AttachNotSupportedException</li>
        <li> JDK-8270708: [aarch64] java.library.path not including /usr/lib64</li>
        <li> JDK-8270707: Password is being converted to String in AccessibleJPasswordField</li>
        <li> JDK-8270706: JFR Terminology Refresh</li>
        <li> JDK-8270705: compiler/codegen/ClearArrayTest.java failed with "assert(false) failed: bad AD file"</li>
        <li> JDK-8270704: The warning for System::setSecurityManager should only appear once for each caller</li>
        <li> JDK-8270703: C2: assert(n != __null) failed: Bad immediate dominator info.</li>
        <li> JDK-8270702: assert(tmp == _callprojs.fallthrough_catchproj) failed: allocation control projection</li>
        <li> JDK-8270701: C2 compilation fails with assert "missing precedence edge"</li>
        <li> JDK-8270700: [JVMCI] restore original qualified exports to Graal</li>
        <li> JDK-8270699: java/foreign/TestResourceScope.java timed out</li>
        <li> JDK-8270698: vmTestbase/gc/gctests/PhantomReference/phantom002/TestDescription.java timed out</li>
        <li> JDK-8270697: assert(is_valid()) failed: invalid register (-1)</li>
        <li> JDK-8270696: Typo in j.t.Normalizer.normalize()</li>
        <li> JDK-8270695: javac crashes when processing parenthesized pattern in instanceof</li>
        <li> JDK-8270694: Crash/miscompile in CallGenerator::for_method_handle_inline after JDK-8191998</li>
        <li> JDK-8270693: C2 fails with assert(!n->is_Store() &amp;&amp; !n->is_LoadStore()) failed: no node with a side effect</li>
        <li> JDK-8270692: C2: main loop in micro benchmark never executed</li>
        <li> JDK-8270691: javadoc generates broken links with {@inheritDoc}</li>
        <li> JDK-8270690: [macos] [lanai] java/awt/PrintJob/Text/stringwidth.sh doesn't exit on cancelling print dialog</li>
        <li> JDK-8270689: JDK-8262891 causes an NPE in Lint.augment</li>
        <li> JDK-8270688: Clarify the behavior of PhantomReference::refersTo</li>
        <li> JDK-8270687: ProblemList vmTestbase/nsk/jvmti/scenarios/sampling/SP07/sp07t002/TestDescription.java on Windows-X64 with -Xcomp</li>
        <li> JDK-8270686: Clarify the spec wrt `useOldISOCodes` system property</li>
        <li> JDK-8270685: [TESTBUG] compiler/compilercontrol/mixed/RandomCommandsTest.java must not fail on Command.quiet</li>
        <li> JDK-8270684: Module page uses unstyled table class</li>
        <li> JDK-8270683: ProblemList sun/management/jdp/JdpDefaultsTest.java on Linux-aarch64</li>
        <li> JDK-8270682: CallerAccessTest fails for non server variant</li>
        <li> JDK-8270681: [s390] Interpreter checks wrong bit for slow path instance allocation</li>
        <li> JDK-8270680: assert(_handle_mark_nesting > 1) failed: memory leak: allocating handle outside HandleMark</li>
        <li> JDK-8270679: Better error recovery for broken patterns in switch</li>
        <li> JDK-8270678: JVM crashes when matching VectorMaskCmp Node</li>
        <li> JDK-8270677: Switch statement containing pattern case label element gets in the loop during execution</li>
        <li> JDK-8270676:  Remove assert that ensures thread identifier remains the same</li>
        <li> JDK-8270675: VectorAPI Long512VectorTest fails on X86 KNL target</li>
        <li> JDK-8270674: [REDO] vmTestbase/vm/mlvm/anonloader/stress/oome/metaspace/Test.java failed with OutOfMemoryError</li>
        <li> JDK-8270673: AccessControlException for SunPKCS11 daemon threads</li>
        <li> JDK-8270672: javax/swing/reliability/HangDuringStaticInitialization.java fails in Windows debug build</li>
        <li> JDK-8270671: assert(!is_jweak(handle)) failed: wrong method for detroying jweak</li>
        <li> JDK-8270670: C2: Compile::remove_speculative_types must iterate top-down</li>
        <li> JDK-8270669: Runtime.exec(String, String[], File) documentation contains literal {@link ...}</li>
        <li> JDK-8270668: Shenandoah: Add test for JDK-8268127</li>
        <li> JDK-8270667: compiler/loopopts/TestPartialPeelingSinkNodes.java crashes with -XX:+VerifyGraphEdges</li>
        <li> JDK-8270666: Rename G1AllowPreventiveGC option to G1UsePreventiveGC</li>
        <li> JDK-8270665: Rename test/jdk/java/lang/invoke/t8150782 to accessClassAndFindClass</li>
        <li> JDK-8270664: async logging supports to dynamically change tags and decorators</li>
        <li> JDK-8270663: Remove java/util/concurrent/locks/Lock/TimedAcquireLeak.java from ProblemList.txt</li>
        <li> JDK-8270662: Fix jpackage tests to gracefully handle jpackage app launcher crashes</li>
        <li> JDK-8270661: Regression ~5% in spec2005 in b27</li>
        <li> JDK-8270660: The documentation of the String.regionMatches method contains error</li>
        <li> JDK-8270659: illegal access to global field _jvmci_old_thread_counters by terminated thread causes crash</li>
        <li> JDK-8270658: Lookup::accessClass fails with IAE when accessing an arrayClass with a protected inner class as component class</li>
        <li> JDK-8270657: Proxy::newProxyInstance and MethodHandleProxies::asInterfaceInstance should reject sealed interfaces</li>
        <li> JDK-8270656: Add AVX512 and other SSE + AVX combinations testing for tests which generate vector instructions</li>
        <li> JDK-8270655: serviceability/dcmd/framework/InvalidCommandTest.java still fails after JDK-8268433</li>
        <li> JDK-8270654: tools/jpackage/share/AppImagePackageTest.java failed with "hdiutil: create failed - Resource busy"</li>
        <li> JDK-8270653: (fs) Files.copy fails to copy from /proc on some linux kernel versions</li>
        <li> JDK-8270648: BCEL: Utility.encode forget to close</li>
        <li> JDK-8270645: Unable to load svml library</li>
        <li> JDK-8270644: Adjust javac to updated exhaustiveness specification</li>
        <li> JDK-8270643: Add default impl for recent new Reporter.print method</li>
        <li> JDK-8270642: Javac generates uncorrect bytecodes when using nested pattern variables</li>
        <li> JDK-8270641: NPE at at jdk.compiler/com.sun.tools.javac.jvm.Code.emitop</li>
        <li> JDK-8270640: ProblemList vmTestbase/vm/mlvm/mixed/stress/regression/b6969574/INDIFY_Test.java on Linux-X64 -Xcomp</li>
        <li> JDK-8270639: ProblemList javax/swing/JFileChooser/FileSystemView/SystemIconTest.java on Win-X64</li>
        <li> JDK-8270638: ProblemList serviceability/dcmd/gc/RunFinalizationTest.java on Win-X64 and linux-aarch64</li>
        <li> JDK-8270637: ProblemList java/awt/KeyboardFocusmanager/TypeAhead/ButtonActionKeyTest/ButtonActionKeyTest.java on win-x64</li>
        <li> JDK-8270636: Scoped ByteBuffer vector access</li>
        <li> JDK-8270635: GaloisCounterMode.overlapDetection misses the JDK-8263436 fix again</li>
        <li> JDK-8270634: ProblemList serviceability/sa/TestJmapCoreMetaspace.java with ZGC</li>
        <li> JDK-8270633: compiler/intrinsics/VectorizedMismatchTest.java failed with failed: length in range</li>
        <li> JDK-8270632: Crash in TestMacroLogicVector::testSubWordBoolean: assert(_base >= VectorMask &amp;&amp; _base <= VectorZ) failed: Not a Vector</li>
        <li> JDK-8270631: LibraryCallKit::inline_preconditions_checkIndex modifies control flow even if the intrinsic bailed out</li>
        <li> JDK-8270630: Erroneous generic type inference in a lambda expression with a checked exception</li>
        <li> JDK-8270629: Klass enqueue element size calculation wrong when traceid value cross compress limit</li>
        <li> JDK-8270628: Parenthesized pattern is not guarded by source level check</li>
        <li> JDK-8270627: Parenthesized pattern with guards does not work</li>
        <li> JDK-8270626: assert(ZAddress::is_marked(addr)) failed: Should be marked</li>
        <li> JDK-8270625: Dropped messages of AsyncLogWriter cause memleak</li>
        <li> JDK-8270624: Update minor GCC version in GitHub Actions pipeline</li>
        <li> JDK-8270623: [aarch64] Crash with 'Field too big for insn' for some tests under compiler/jvmci/jdk.vm.ci.code.test/src/jdk/vm/ci/code/test/</li>
        <li> JDK-8270622: [TESTBUG] tools/jpackage/windows/WinInstallerIconTest.java failed "AssertionError: Failed: Check icon"</li>
        <li> JDK-8270621: c2 loop unrolling by 8 results in reading memory past array</li>
        <li> JDK-8270620: C2: java/text/Normalizer/ConformanceTest.java test failed with assertion</li>
        <li> JDK-8270619: Upstream 8268230: Foreign Linker API &amp; Windows user32/kernel32: String conversion seems broken</li>
        <li> JDK-8270618: nmethod::post_compiled_method_load_event racingly called on zombie</li>
        <li> JDK-8270617: StandardJavaFileManager::setLocationFromPaths() spec contains an error</li>
        <li> JDK-8270616: StandardJavaFileManager::getJavaFileObjectsFromPaths() methods contain a typo in their spec</li>
        <li> JDK-8270615: StandardJavaFileManager: default impls of setLocationFromPaths(), getJavaFileObjectsFromPaths() methods don't throw IllegalArgumentException as specified</li>
        <li> JDK-8270614: StandardJavaFileManager: getJavaFileObjects() impl violates the spec</li>
        <li> JDK-8270613: j.l.constant.DirectMethodHandleDesc.Kind.valueOf(int) implementation doesn't conform to the spec regarding REF_invokeInterface handling</li>
        <li> JDK-8270612: Provide clear run-time warnings about Security Manager deprecation</li>
        <li> JDK-8270611: VectorAPI cast operation on mask and shuffle is broken</li>
        <li> JDK-8270610: [BACKOUT] JDK-8196415 Disable SHA-1 Signed JARs</li>
        <li> JDK-8270608: C2: assert(!loop->is_member(u_loop)) failed: can be in outer loop or out of both loops only</li>
        <li> JDK-8270607: Upstream: 8268673: Stack walk across optimized entry frame on fresh native thread fails</li>
        <li> JDK-8270606: [REDO] C2 crash when compile negative Arrays.copyOf length after loop</li>
        <li> JDK-8270605: JFR diagnostic commands lack argument descriptors when viewed using Platform MBean Server</li>
        <li> JDK-8270604: bug in monitor locking/unlocking on ARM32 C1 due to uninitialized BasicObjectLock::_displaced_header</li>
        <li> JDK-8270603: Build failure due to VerifyReceiverTypes was not declared after JDK-8268405</li>
        <li> JDK-8270602: Typo in JFR jdk.Deserialization event</li>
        <li> JDK-8270601: semaphores of AsyncLogWriter may be broken when JVM is exiting.</li>
        <li> JDK-8270600: ClhsdbFindPC still fails with java.lang.RuntimeException: 'In java stack' missing from stdout/stderr</li>
        <li> JDK-8270599: XML transformation and indentation when using xml:space</li>
        <li> JDK-8270598: jsig/Testjsig.java doesn't check exit code</li>
        <li> JDK-8270597: Refactor and expand scatter/gather tests</li>
        <li> JDK-8270596: JFR: RecordingStream::dump is missing @since</li>
        <li> JDK-8270595: [macos-aarch64] java/net/MulticastSocket/Promiscuous.java failed with "SocketException: Cannot allocate memory"</li>
        <li> JDK-8270594: mark hotspot serviceability/attach tests which ignore external VM flags</li>
        <li> JDK-8270593: mark SDTProbesGNULinuxTest as ignoring external VM flags</li>
        <li> JDK-8270592: mark hotspot serviceability/sa tests which ignore external VM flags</li>
        <li> JDK-8270591: mark hotspot serviceability/jvmti tests which ignore external VM flags</li>
        <li> JDK-8270590: mark hotspot runtime/sealedClasses tests which ignore external VM flags</li>
        <li> JDK-8270589: mark hotspot runtime/stringtable tests which ignore external VM flags</li>
        <li> JDK-8270588: runtime/handshake tests don't need WhiteBox after AOT removal</li>
        <li> JDK-8270587: mark hotspot runtime/verifier tests which ignore external VM flags</li>
        <li> JDK-8270586: mark hotspot runtime/symboltable tests which ignore external VM flags</li>
        <li> JDK-8270585: mark hotspot runtime/records tests which ignore external VM flags</li>
        <li> JDK-8270584: a few runtime/jni tests don't need `/othervm`</li>
        <li> JDK-8270583: Several regressions 4-17% after CHA changes</li>
        <li> JDK-8270582: LetsEncryptCA.java test fails as Let’s Encrypt Authority X3 is retired</li>
        <li> JDK-8270581: Some impls of javax.crypto.Cipher.init() do not throw UnsupportedOperationExc for unsupported modes</li>
        <li> JDK-8270580: C2: assert(_gvn.type(obj)->higher_equal(tjp)) failed: cast_up is no longer needed</li>
        <li> JDK-8270579: assert(!ik->is_interface() &amp;&amp; !ik->has_subklass()) failed: inconsistent klass hierarchy</li>
        <li> JDK-8270578:  MutableSpaceUsedHelper::take_sample() hits assert(left >= right) failed: avoid overflow</li>
        <li> JDK-8270577: ProblemList tools/jpackage/windows/WinInstallerIconTest.java on win-x64</li>
        <li> JDK-8270576: Javac crashes with NullPointerException when finding unencoded XML in <pre> tag</li>
        <li> JDK-8270575: javax/net/ssl/SSLSession/TestEnabledProtocols.java failed with "RuntimeException: java.net.SocketException: Connection reset"</li>
        <li> JDK-8270574: Test libsvml.so is and is not present in jdk image</li>
        <li> JDK-8270573: jdk/javadoc/tool/6176978/T6176978.java uses @ignore w/o bug-id</li>
        <li> JDK-8270572: jdk/javadoc/tool/LangVers.java uses @ignore w/o bug-id</li>
        <li> JDK-8270571: jdk/javadoc/tool/InlineTagsWithBraces.java uses @ignore w/o bug-id</li>
        <li> JDK-8270570: Test `ADatagramSocket.java` missing /othervm from @run tag</li>
        <li> JDK-8270569: java/util/concurrent/forkjoin/AsyncShutdownNow.java fails with java.util.concurrent.RejectedExecutionException</li>
        <li> JDK-8270568: AArch64: Build failure after JDK-8267663</li>
        <li> JDK-8270567: [foreign] assert(allocates2(pc)) failed: not in CodeBuffer memory with ShenandoahGC</li>
        <li> JDK-8270566: Update the documentation for -Xcheck:jni</li>
        <li> JDK-8270565: ProblemList serviceability/sa/TestJmapCoreMetaspace.java on linux-x64 with ZGC</li>
        <li> JDK-8270564: ProblemList jdk/jfr/api/consumer/streaming/TestLatestEvent.java on win-x64</li>
        <li> JDK-8270563: Add expiry exception for identrustdstx3 alias to VerifyCACerts.java test</li>
        <li> JDK-8270562: Residual logging output written to STDOUT, not STDERR</li>
        <li> JDK-8270561: [macos-aarch64] 7 java/net/httpclient/websocket tests failed</li>
        <li> JDK-8270560: JDK-8268768 missed removing two files</li>
        <li> JDK-8262502: build --with-harfbuzz=system fails on Debian/Ubuntu systems</li>
    </ul>

    </div>

    <div class="anchor">
      <a href="#jdk8u302" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><button type="button" onclick="showHideReleaseNotes('jdk8u302_notes');">-/+</button> <a id="jdk8u302">OpenJDK 8u302 (1.8.0_302-b08)</a></h2>
    </div>
    <div class="margin-bottom softHide" id="jdk8u302_notes">

      You can check the details of these bugs using the <a href="https://bugs.openjdk.java.net/issues/?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%20openjdk8u302" target="_blank">8u302</a> Fix Version filter in the JDK Bug System.

      <h3>Security fixes</h3>
      <ul>
        <li>JDK-8256157: Improve bytecode assembly</li>
        <li>JDK-8256491: Better HTTP transport</li>
        <li>JDK-8258432, CVE-2021-2341: Improve file transfers</li>
        <li>JDK-8260453: Improve Font Bounding</li>
        <li>JDK-8260960: Signs of jarsigner signing</li>
        <li>JDK-8260967, CVE-2021-2369: Better jar file validation</li>
        <li>JDK-8262380: Enhance XML processing passes</li>
        <li>JDK-8262403: Enhanced data transfer</li>
        <li>JDK-8262410: Enhanced rules for zones</li>
        <li>JDK-8262477: Enhance String Conclusions</li>
        <li>JDK-8262967: Improve Zip file support</li>
        <li>JDK-8264066, CVE-2021-2388: Enhance compiler validation</li>
        <li>JDK-8264079: Improve abstractions</li>
        <li>JDK-8264460: Improve NTLM support</li>
      </ul>

      <h3>Other changes</h3>
      <ul>
        <li>JDK-6878250: (so) IllegalBlockingModeException thrown when reading from a closed SocketChannel's InputStream</li>
        <li>JDK-6990210: [TEST_BUG] EventDispatchThread/HandleExceptionOnEDT/HandleExceptionOnEDT.java fails on gnome</li>
        <li>JDK-7059970: Test case: javax/imageio/plugins/png/ITXtTest.java is not closing a file</li>
        <li>JDK-7106851: Test should not use System.exit</li>
        <li>JDK-8019470: Changes needed to compile JDK 8 on MacOS with clang compiler</li>
        <li>JDK-8028618: [TEST BUG] javax/swing/JScrollBar/bug4202954/bug4202954.java fails</li>
        <li>JDK-8030123: java/beans/Introspector/Test8027648.java fails</li>
        <li>JDK-8032050: Clean up for java/rmi/activation/Activatable/shutdownGracefully/ShutdownGracefully.java</li>
        <li>JDK-8033289: clang: clean up unused function warning</li>
        <li>JDK-8034856: gcc warnings compiling src/solaris/native/sun/security/pkcs11</li>
        <li>JDK-8034857: gcc warnings compiling src/solaris/native/sun/management</li>
        <li>JDK-8035000: clean up ActivationLibrary.DestroyThread</li>
        <li>JDK-8035054: JarFacade.c should not include ctype.h</li>
        <li>JDK-8035287: gcc warnings compiling various libraries files</li>
        <li>JDK-8036095: RMI tests using testlibrary.RMID and testlibrary.JavaVM do not pass through vmoptions</li>
        <li>JDK-8037825: Fix warnings and enable "warnings as errors" in serviceability native libraries</li>
        <li>JDK-8042891: Format issues embedded in macros for two g1 source files</li>
        <li>JDK-8043264: hsdis library not picked up correctly on expected paths</li>
        <li>JDK-8043646: libosxapp.dylib fails to build on Mac OS 10.9 with clang</li>
        <li>JDK-8047939: [TESTBUG] Rewrite test/runtime/8001071/Test8001071.sh</li>
        <li>JDK-8055754: filemap.cpp does not compile with clang</li>
        <li>JDK-8064909: FragmentMetaspace.java got OutOfMemoryError</li>
        <li>JDK-8066508: JTReg tests timeout on slow devices when run using JPRT</li>
        <li>JDK-8066807: langtools/test/Makefile should use -agentvm not -samevm</li>
        <li>JDK-8071374: -XX:+PrintAssembly -XX:+PrintSignatureHandlers crash fastdebug VM with assert(limit == __null || limit <= nm->code_end()) in RelocIterator::initialize</li>
        <li>JDK-8073446: TimeZone getOffset API does not return a dst offset between years 2038-2137</li>
        <li>JDK-8074835: Resolve disabled warnings for libj2gss</li>
        <li>JDK-8074836: Resolve disabled warnings for libosxkrb5</li>
        <li>JDK-8075071: [TEST_BUG] TimSortStackSize2.java: OOME: Java heap space: MaxHeap shrinked by MaxRAMFraction</li>
        <li>JDK-8077364: "if( !this )" construct prevents build on Xcode 6.3</li>
        <li>JDK-8078855: [TEST_BUG] javax/swing/JComboBox/8032878/bug8032878.java fails in WindowsClassicLookAndFeel</li>
        <li>JDK-8081764: [TEST_BUG] Test javax/swing/plaf/aqua/CustomComboBoxFocusTest.java fails on Windows, Solaris Sparcv9 and Linux but passes on MacOSX</li>
        <li>JDK-8129511: PlatformMidi.c:83 uses malloc without malloc header</li>
        <li>JDK-8130308: Too low memory usage in TestPromotionFromSurvivorToTenuredAfterMinorGC.java</li>
        <li>JDK-8130430: [TEST_BUG] remove unnecessary internal calls from javax/swing/JRadioButton/8075609/bug8075609.java</li>
        <li>JDK-8132148: G1 hs_err region dump legend out of sync with region values</li>
        <li>JDK-8132709: [TESTBUG] gc/g1/TestHumongousShrinkHeap.java might fail on embedded</li>
        <li>JDK-8134672: [TEST_BUG] Some tests should check isDisplayChangeSupported</li>
        <li>JDK-8134883: C1 hard crash in range check elimination in Nashorn test262parallel</li>
        <li>JDK-8136592: [TEST_BUG] Fix 2 platform-specific closed regtests for jigsaw</li>
        <li>JDK-8138820: JDK Hotspot build fails with Xcode 7.0.1</li>
        <li>JDK-8151786: [TESTBUG] java/beans/XMLEncoder/Test4625418.java timed out intermittently</li>
        <li>JDK-8159898: Negative array size in java/beans/Introspector/Test8027905.java</li>
        <li>JDK-8166046: [TESTBUG] compiler/stringopts/TestStringObjectInitialization.java fails with OOME</li>
        <li>JDK-8166724: gc/g1/TestHumongousShrinkHeap.java fails with OOME</li>
        <li>JDK-8172188: JDI tests fail due to "permission denied" when creating temp file</li>
        <li>JDK-8177809: File.lastModified() is losing milliseconds (always ends in 000)</li>
        <li>JDK-8178403: DirectAudio in JavaSound may hang and leak</li>
        <li>JDK-8180478: tools/launcher/MultipleJRE.sh fails on Windows because of extra-''</li>
        <li>JDK-8183910: gc/arguments/TestAggressiveHeap.java fails intermittently</li>
        <li>JDK-8190332: PngReader throws NegativeArraySizeException/OOM error when IHDR width is very large</li>
        <li>JDK-8190679: java/util/Arrays/TimSortStackSize2.java fails with "Initial heap size set to a larger value than the maximum heap size"</li>
        <li>JDK-8191955: AArch64: incorrect prefetch distance causes an internal error</li>
        <li>JDK-8196092: javax/swing/JComboBox/8032878/bug8032878.java fails</li>
        <li>JDK-8199265: java/util/Arrays/TimSortStackSize2.java fails with OOM</li>
        <li>JDK-8200550: Xcode 9.3 produce warning -Wexpansion-to-defined</li>
        <li>JDK-8202299: Java Keystore fails to load PKCS12/PFX certificates created in WindowsServer2016</li>
        <li>JDK-8203196: C1 emits incorrect code due to integer overflow in _tableswitch keys</li>
        <li>JDK-8205014: com/sun/jndi/ldap/DeadSSLLdapTimeoutTest.java failed with "Read timed out"</li>
        <li>JDK-8206243: java -XshowSettings fails if memory.limit_in_bytes overflows LONG.max</li>
        <li>JDK-8206925: Support the certificate_authorities extension</li>
        <li>JDK-8209996: [PPC64] Fix JFR profiling</li>
        <li>JDK-8214345: infinite recursion while checking super class</li>
        <li>JDK-8217230: assert(t == t_no_spec) failure in NodeHash::check_no_speculative_types()</li>
        <li>JDK-8217348: assert(thread->is_Java_thread()) failed: just checking</li>
        <li>JDK-8225081: Remove Telia Company CA certificate expiring in April 2021</li>
        <li>JDK-8225116: Test OwnedWindowsLeak.java intermittently fails</li>
        <li>JDK-8228757: Fail fast if the handshake type is unknown</li>
        <li>JDK-8230428: Cleanup dead CastIP node code in formssel.cpp</li>
        <li>JDK-8231631: sun/net/ftp/FtpURLConnectionLeak.java fails intermittently with NPE</li>
        <li>JDK-8231841: AArch64: debug.cpp help() is missing an AArch64 line for pns</li>
        <li>JDK-8231949: [PPC64, s390]: Make async profiling more reliable</li>
        <li>JDK-8234011: (zipfs) Memory leak in ZipFileSystem.releaseDeflater()</li>
        <li>JDK-8239053: [8u] clean up undefined-var-template warnings</li>
        <li>JDK-8239400: [8u] clean up undefined-var-template warnings</li>
        <li>JDK-8241649: Optimize Character.toString</li>
        <li>JDK-8241829: Cleanup the code for PrinterJob on windows</li>
        <li>JDK-8242565: Policy initialization issues when the denyAfter constraint is enabled</li>
        <li>JDK-8243559: Remove root certificates with 1024-bit keys</li>
        <li>JDK-8247350: [aarch64] assert(false) failed: wrong size of mach node</li>
        <li>JDK-8249142: java/awt/FontClass/CreateFont/DeleteFont.sh is unstable</li>
        <li>JDK-8249278: Revert JDK-8226253 which breaks the spec of AccessibleState.SHOWING for JList</li>
        <li>JDK-8250876: Fix issues with cross-compile on macos</li>
        <li>JDK-8252883: AccessDeniedException caused by delayed file deletion on Windows</li>
        <li>JDK-8253375: OSX build fails with Xcode 12.0 (12A7209)</li>
        <li>JDK-8254631: Better support ALPN byte wire values in SunJSSE</li>
        <li>JDK-8255086: Update the root locale display names</li>
        <li>JDK-8255734: VM should ignore SIGXFSZ on ppc64, s390 too</li>
        <li>JDK-8256818: SSLSocket that is never bound or connected leaks socket resources</li>
        <li>JDK-8257039: [8u] GenericTaskQueue destructor is incorrect</li>
        <li>JDK-8257670: sun/security/ssl/SSLSocketImpl/SSLSocketLeak.java reports leaks</li>
        <li>JDK-8257884: Re-enable sun/security/ssl/SSLSocketImpl/SSLSocketLeak.java as automatic test</li>
        <li>JDK-8257997: sun/security/ssl/SSLSocketImpl/SSLSocketLeak.java again reports leaks after JDK-8257884</li>
        <li>JDK-8257999: Parallel GC crash in gc/parallel/TestDynShrinkHeap.java: new region is not in covered_region</li>
        <li>JDK-8258419: RSA cipher buffer cleanup</li>
        <li>JDK-8258669: fastdebug jvm crashes when do event based tracing for monitor inflation</li>
        <li>JDK-8258753: StartTlsResponse.close() hangs due to synchronization issues</li>
        <li>JDK-8259271: gc/parallel/TestDynShrinkHeap.java still fails "assert(covered_region.contains(new_memregion)) failed: new region is not in covered_region"</li>
        <li>JDK-8259619: C1: 3-arg StubAssembler::call_RT stack-use condition is incorrect</li>
        <li>JDK-8259886: Improve SSL session cache performance and scalability</li>
        <li>JDK-8260029: aarch64: fix typo in verify_oop_array</li>
        <li>JDK-8260236: better init AnnotationCollector _contended_group</li>
        <li>JDK-8260255: C1: LoopInvariantCodeMotion constructor can leave some fields uninitialized</li>
        <li>JDK-8260484: CheckExamples.java / NoJavaLangTest.java fail with jtreg 4.2</li>
        <li>JDK-8260704: ParallelGC: oldgen expansion needs release-store for _end</li>
        <li>JDK-8261355: No data buffering in SunPKCS11 Cipher encryption when the underlying mechanism has no padding</li>
        <li>JDK-8261867: Backport relevant test changes &amp; additions from JDK-8130125</li>
        <li>JDK-8262110: DST starts from incorrect time in 2038</li>
        <li>JDK-8262446: DragAndDrop hangs on Windows</li>
        <li>JDK-8262726: AArch64: C1 StubAssembler::call_RT can corrupt stack</li>
        <li>JDK-8262730: Enable jdk8u MacOS external debug symbols</li>
        <li>JDK-8262864: No debug symbols in image for Windows --with-native-debug-symbols=external</li>
        <li>JDK-8263061: copy wrong unpack200 debuginfo to bin directory after 8252395</li>
        <li>JDK-8263504: Some OutputMachOpcodes fields are uninitialized</li>
        <li>JDK-8263600: change rmidRunning to a simple lookup</li>
        <li>JDK-8264509: jdk8u MacOS zipped debug symbols won't build</li>
        <li>JDK-8264562: assert(verify_field_bit(1)) failed: Attempting to write an uninitialized event field: type</li>
        <li>JDK-8264640: CMS ParScanClosure misses a barrier</li>
        <li>JDK-8264816: Weak handles leak causes GC to take longer</li>
        <li>JDK-8265462: Handle multiple slots in the NSS Internal Module from SunPKCS11's Secmod</li>
        <li>JDK-8265666: Enable AIX build platform to make external debug symbols</li>
        <li>JDK-8265832: runtime/StackGap/testme.sh fails to compile in 8u</li>
        <li>JDK-8265988: Fix sun/text/IntHashtable/Bug4170614 for JDK 8u</li>
        <li>JDK-8266191: Missing aarch64 parts of JDK-8181872 (C1: possible overflow when strength reducing integer multiply by constant)</li>
        <li>JDK-8266723: JFR periodic events are causing extra allocations</li>
        <li>JDK-8266929: Unable to use algorithms from 3p providers</li>
        <li>JDK-8267235: [macos_aarch64] InterpreterRuntime::throw_pending_exception messing up LR results in crash</li>
        <li>JDK-8267426: MonitorVmStartTerminate test timed out on Embedded VM</li>
        <li>JDK-8267545: [8u] Enable Xcode 12 builds on macOS</li>
        <li>JDK-8267689: [aarch64] Crash due to bad shift in indirect addressing mode</li>
        <li>JDK-8268444: keytool -v -list print is incorrect after backport JDK-8141457</li>
        <li>JDK-8269388: Default build of OpenJDK 8 fails on newer GCCs with warnings as errors on format-overflow</li>
        <li>JDK-8269468: JDK-8269388 breaks the build on older GCCs</li>
        <li>JDK-8270533: AArch64: size_fits_all_mem_uses should return false if its output is a CAS</li>
      </ul>

      <h3>Notes on individual issues</h3>
      <h4>security-libs/java.security</h4>

      <h5>JDK-8256902: Removed Root Certificates with 1024-bit Keys</h5>
      
      The following root certificates with weak 1024-bit RSA public keys
      have been removed from the `cacerts` keystore:

      <ul>
        <li>
          Alias Name: thawtepremiumserverca [jdk]<br/>
          Distinguished Name: EMAILADDRESS=premium-server at thawte.com, CN=Thawte Premium Server CA, OU=Certification Services Division, O=Thawte Consulting cc, L=Cape Town, ST=Western Cape, C=ZA
        </li>

        <li>
          Alias Name: verisignclass2g2ca [jdk]<br/>
          Distinguished Name: OU=VeriSign Trust Network, OU="(c) 1998 VeriSign, Inc. - For authorized use only", OU=Class 2 Public Primary Certification Authority - G2, O="VeriSign, Inc.", C=US
        </li>

        <li>
          Alias Name: verisignclass3ca [jdk]<br/>
          Distinguished Name: OU=Class 3 Public Primary Certification Authority, O="VeriSign, Inc.", C=US
        </li>

        <li>
          Alias Name: verisignclass3g2ca [jdk]<br/>
          Distinguished Name: OU=VeriSign Trust Network, OU="(c) 1998 VeriSign, Inc. - For authorized use only", OU=Class 3 Public Primary Certification Authority - G2, O="VeriSign, Inc.", C=US
        </li>

        <li>
          Alias Name: verisigntsaca [jdk]<br/>
          Distinguished Name: CN=Thawte Timestamping CA, OU=Thawte Certification, O=Thawte, L=Durbanville, ST=Western Cape, C=ZA
        </li>
      </ul>

      <h5>JDK-8261361: Removed Telia Company's Sonera Class2 CA certificate</h5>
      
      The following root certificate have been removed from the cacerts truststore:

      Alias Name: soneraclass2ca
      Distinguished Name: CN=Sonera Class2 CA, O=Sonera, C=FI

      <h4>security-libs/javax.net.ssl:</h4>

      <h5>JDK-8257548: Improve Encoding of TLS Application-Layer Protocol Negotiation (ALPN) Values</h5>
      
      Certain TLS ALPN values couldn't be properly read or written by the
      SunJSSE provider. This is due to the choice of Strings as the API
      interface and the undocumented internal use of the UTF-8 Character Set
      which converts characters larger than U+00007F (7-bit ASCII) into
      multi-byte arrays that may not be expected by a peer.

      ALPN values are now represented using the network byte representation
      expected by the peer, which should require no modification for
      standard 7-bit ASCII-based character Strings. However, SunJSSE now
      encodes/decodes String characters as 8-bit ISO_8859_1/LATIN-1
      characters.  This means applications that used characters above
      U+000007F that were previously encoded using UTF-8 may need to either
      be modified to perform the UTF-8 conversion, or set the Java security
      property `jdk.tls.alpnCharset` to "UTF-8" revert the behavior.

      See the updated guide at
      https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/alpn.html
      for more information.

      <h5>JDK-8244460: Support for certificate_authorities Extension</h5>
      
      The "certificate_authorities" extension is an optional extension
      introduced in TLS 1.3. It is used to indicate the certificate
      authorities (CAs) that an endpoint supports and should be used by the
      receiving endpoint to guide certificate selection.

      With this JDK release, the "certificate_authorities" extension is
      supported for TLS 1.3 in both the client and the server sides.  This
      extension is always present for client certificate selection, while it
      is optional for server certificate selection.

      Applications can enable this extension for server certificate
      selection by setting the `jdk.tls.client.enableCAExtension` system
      property to `true`.  The default value of the property is `false`.

      Note that if the client trusts more CAs than the size limit of the
      extension (less than 2^16 bytes), the extension is not enabled.  Also,
      some server implementations do not allow handshake messages to exceed
      2^14 bytes.  Consequently, there may be interoperability issues when
      `jdk.tls.client.enableCAExtension` is set to `true` and the client
      trusts more CAs than the server implementation limit.

    </div>

    <div class="anchor">
      <a href="#jdk11_0_12_7" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><button type="button" onclick="showHideReleaseNotes('jdk11_0_12_7_notes');">-/+</button> <a id="jdk11_0_12_7">OpenJDK 11.0.12+7</a></h2>
    </div>
    <div class="margin-bottom softHide" id="jdk11_0_12_7_notes">

      You can check the details of these bugs using the <a href="https://bugs.openjdk.java.net/issues/?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2011.0.12" target="_blank">11.0.12</a> Fix Version filter in the JDK Bug System.

      <h3>Security fixes</h3>
      <ul>
        <li>JD K-8256157: Improve bytecode assembly</li>
        <li>JDK-8256491: Better HTTP transport</li>
        <li>JDK-8258432, CVE-2021-2341: Improve file transfers</li>
        <li>JDK-8260453: Improve Font Bounding</li>
        <li>JDK-8260960: Signs of jarsigner signing</li>
        <li>JDK-8260967, CVE-2021-2369: Better jar file validation</li>
        <li>JDK-8262380: Enhance XML processing passes</li>
        <li>JDK-8262403: Enhanced data transfer</li>
        <li>JDK-8262410: Enhanced rules for zones</li>
        <li>JDK-8262477: Enhance String Conclusions</li>
        <li>JDK-8262967: Improve Zip file support</li>
        <li>JDK-8264066, CVE-2021-2388: Enhance compiler validation</li>
        <li>JDK-8264079: Improve abstractions</li>
        <li>JDK-8264460: Improve NTLM support</li>
      </ul>
      <h3>Other changes</h3>
      <ul>
        <li>JDK-6847157: java.lang.NullPointerException: HDC for component at sun.java2d.loops.Blit.Blit</li>
        <li>JDK-7106851: Test should not use System.exit</li>
        <li>JDK-8073446: TimeZone getOffset API does not  return a dst offset between years 2038-2137</li>
        <li>JDK-8076190: Customizing the generation of a PKCS12 keystore</li>
        <li>JDK-8153005: Upgrade the default PKCS12 encryption/MAC algorithms</li>
        <li>JDK-8171303: sun/java2d/pipe/InterpolationQualityTest.java fails on Windows &amp; Linux</li>
        <li>JDK-8177068: incomplete classpath causes NPE in Flow</li>
        <li>JDK-8185734: [Windows] Structured Exception Catcher missing around gtest execution</li>
        <li>JDK-8187450: JNI local refs exceeds capacity warning in NetworkInterface::getAll</li>
        <li>JDK-8190763: Class cast exception on (CompoundEdit) UndoableEditEvent.getEdit()</li>
        <li>JDK-8195841: PNGImageReader.readNullTerminatedString() doesnt check for non-null terminated strings with length equal to maxLen</li>
        <li>JDK-8196100: javax/swing/text/JTextComponent/5074573/bug5074573.java fails</li>
        <li>JDK-8199646: JShell tests: jdk/jshell/FailOverDirectExecutionControlTest.java failed with java.lang.UnsupportedOperationException</li>
        <li>JDK-8206925: Support the certificate_authorities extension</li>
        <li>JDK-8207160: ClassReader::adjustMethodParams can potentially return null if the args list is empty</li>
        <li>JDK-8207247: AARCH64: Enable Minimal and Client VM builds</li>
        <li>JDK-8207404: MulticastSocket tests failing on AIX</li>
        <li>JDK-8207779: Method::is_valid_method() compares 'this' with NULL</li>
        <li>JDK-8208061: runtime/LoadClass/TestResize.java fails with "Load factor too high" when running in CDS mode.</li>
        <li>JDK-8209459: TestSHA512MultiBlockIntrinsics failed on AArch64</li>
        <li>JDK-8210443: Migrate Locale matching tests to JDK Repo.</li>
        <li>JDK-8213231: ThreadSnapshot::_threadObj can become stale</li>
        <li>JDK-8213483: ARM32: runtime/ErrorHandling/ShowRegistersOnAssertTest.java jtreg test fail</li>
        <li>JDK-8213725: JShell NullPointerException due to class file with unexpected package</li>
        <li>JDK-8213794: ARM32: disable TypeProfiling, CriticalJNINatives, Serviceablity tests for ARM32</li>
        <li>JDK-8213845: ARM32: Interpreter doesn't call result handler after native calls</li>
        <li>JDK-8214128: ARM32: wrong stack alignment on Deoptimization::unpack_frames</li>
        <li>JDK-8214512: ARM32: Jtreg test compiler/c2/Test8062950.java fails on ARM</li>
        <li>JDK-8214854: JDWP: Unforseen output truncation in logging</li>
        <li>JDK-8214922: Add vectorization support for fmin/fmax</li>
        <li>JDK-8215009: GCC 8 compilation error in libjli</li>
        <li>JDK-8216184: CDS/appCDS tests failed on Windows due to long path to a classlist file</li>
        <li>JDK-8216259: AArch64: Vectorize Adler32 intrinsics</li>
        <li>JDK-8216314: SIGILL in CodeHeapState::print_names()</li>
        <li>JDK-8217348: assert(thread->is_Java_thread()) failed: just checking</li>
        <li>JDK-8217465: [REDO] - Optimize CodeHeap Analytics</li>
        <li>JDK-8217561: X86: Add floating-point Math.min/max intrinsics</li>
        <li>JDK-8217918: C2: -XX:+AggressiveUnboxing is broken</li>
        <li>JDK-8218458: [TESTBUG] runtime/NMT/CheckForProperDetailStackTrace.java fails with Expected stack trace missing from output</li>
        <li>JDK-8219142: Remove unused JIMAGE_ResourcePath</li>
        <li>JDK-8219586: CodeHeap State Analytics processes dead nmethods</li>
        <li>JDK-8220074: Clean up GCC 8.3 errors in LittleCMS</li>
        <li>JDK-8220407: compiler/intrinsics/math/TestFpMinMaxIntrinsics.java timedout</li>
        <li>JDK-8222302: [TESTBUG]test/hotspot/jtreg/compiler/intrinsics/sha/cli/TestUseSHAOptionOnUnsupportedCPU.java fails on any other CPU</li>
        <li>JDK-8222412: AARCH64: multiple instructions encoding issues</li>
        <li>JDK-8223020: aarch64: expand minI_rReg and maxI_rReg patterns into separate instructions</li>
        <li>JDK-8223444: Improve CodeHeap Free Space Management</li>
        <li>JDK-8223504: Improve performance of forall loops by better inlining of "iterator()" methods</li>
        <li>JDK-8223667: ASAN build broken</li>
        <li>JDK-8225081: Remove Telia Company CA certificate expiring in April 2021</li>
        <li>JDK-8225116: Test OwnedWindowsLeak.java intermittently fails</li>
        <li>JDK-8225438: javax/net/ssl/TLSCommon/TestSessionLocalPrincipal.java failed with Read timed out</li>
        <li>JDK-8225756: [testbug] compiler/loopstripmining/CheckLoopStripMining.java sets too short a SafepointTimeoutDelay</li>
        <li>JDK-8226374: Restrict TLS signature schemes and named groups</li>
        <li>JDK-8226627: assert(t->singleton()) failed: must be a constant</li>
        <li>JDK-8226721: Missing intrinsics for Math.ceil, floor, rint</li>
        <li>JDK-8227080: (fs) Files.newInputStream(...).skip(n) is slow</li>
        <li>JDK-8227222: vmTestbase/jit/FloatingPoint/gen_math/Loops04/Loops04.java failed XMM register should be 0-15</li>
        <li>JDK-8227609: (fs) Files.newInputStream(...).skip(n) should allow skipping beyond file size</li>
        <li>JDK-8230428: Cleanup dead CastIP node code in formssel.cpp</li>
        <li>JDK-8231460: Performance issue (CodeHeap) with large free blocks</li>
        <li>JDK-8231713: x86_32 build failures after JDK-8226721 (Missing intrinsics for Math.ceil, floor, rint)</li>
        <li>JDK-8231841: AArch64: debug.cpp help() is missing an AArch64 line for pns</li>
        <li>JDK-8232084: HotSpot build failed with GCC 9.2.1</li>
        <li>JDK-8232591: AArch64: Add missing match rules for smaddl, smsubl and smnegl</li>
        <li>JDK-8233185: HttpServer.stop() blocks indefinitely when called on dispatch thread</li>
        <li>JDK-8233787: Break cycle in vm_version* includes</li>
        <li>JDK-8233948: AArch64: Incorrect mapping between OptoReg and VMReg for high 64 bits of Vector Register</li>
        <li>JDK-8234355: Buffer overflow in jcmd GC.class_stats due to too many classes</li>
        <li>JDK-8235368: Update BCEL to Version 6.4.1</li>
        <li>JDK-8236859: WebSocket over authenticating proxy fails with NPE</li>
        <li>JDK-8236992: AArch64: remove redundant load_klass in itable stub</li>
        <li>JDK-8237743: test/langtools/jdk/jshell/FailOverExecutionControlTest.java fails No ExecutionControlProvider with name 'nonExistent' and parameter keys: []</li>
        <li>JDK-8237804: sun/security/mscapi tests fail with "Key pair not generated, alias <nnnnnn> already exists"</li>
        <li>JDK-8238175: CTW: Class.getDeclaredMethods fails with assert(k->is_subclass_of(SystemDictionary::Throwable_klass())) failed: invalid exception class</li>
        <li>JDK-8238567: SoftMainMixer.processAudioBuffers(): Wrong handling of stoppedMixers</li>
        <li>JDK-8238812: assert(false) failed: bad AD file</li>
        <li>JDK-8239312: [macos] javax/swing/JFrame/NSTexturedJFrame/NSTexturedJFrame.java</li>
        <li>JDK-8239386: handle ContendedPaddingWidth in vm_version_aarch64</li>
        <li>JDK-8239536: Can't use `java.util.List` object after importing `java.awt.List`</li>
        <li>JDK-8240487: Cleanup whitespace in .cc, .hh, .m, and .mm files</li>
        <li>JDK-8240848: ArrayIndexOutOfBoundsException buf for TextCallbackHandler</li>
        <li>JDK-8241082: Upgrade IANA Language Subtag Registry data to 03-16-2020 version</li>
        <li>JDK-8241087: Build failure with VS 2019 (16.5.0) due to C2039 and C2873</li>
        <li>JDK-8241101: [s390] jtreg test failure after JDK-8238696: not conformant features string</li>
        <li>JDK-8241248: NullPointerException in sun.security.ssl.HKDF.extract(HKDF.java:93)</li>
        <li>JDK-8241372: Several test failures due to javax.net.ssl.SSLException: Connection reset</li>
        <li>JDK-8241475: AArch64: Add missing support for PopCountVI node</li>
        <li>JDK-8241829: Cleanup the code for PrinterJob on windows</li>
        <li>JDK-8241960: The SHA3 message digests impl of SUN provider are not thread safe after cloned</li>
        <li>JDK-8242010: Upgrade IANA Language Subtag Registry to Version 2020-04-01</li>
        <li>JDK-8242429: Better implementation for sign extract</li>
        <li>JDK-8242557: Add length limit for strings in PNGImageWriter</li>
        <li>JDK-8242919: Paste locks up jshell</li>
        <li>JDK-8243155: AArch64: Add support for SqrtVF</li>
        <li>JDK-8243240: AArch64: Add support for MulVB</li>
        <li>JDK-8243452: JFR: Could not create chunk in repository with over 200 recordings</li>
        <li>JDK-8243559: Remove root certificates with 1024-bit keys</li>
        <li>JDK-8243597: AArch64: Add support for integer vector abs</li>
        <li>JDK-8244031: HttpClient should have more tests for HEAD requests</li>
        <li>JDK-8244205: HTTP/2 tunnel connections through proxy may be reused regardless of which proxy is selected</li>
        <li>JDK-8244847: Linux/PPC: runtime/CompressedOops/CompressedClassPointers: smallHeapTest fails</li>
        <li>JDK-8245511: G1 adaptive IHOP does not account for reclamation of humongous objects by young GC</li>
        <li>JDK-8246274: G1 old gen allocation tracking is not in a separate class</li>
        <li>JDK-8247354: [aarch64] PopFrame causes assert(oopDesc::is_oop(obj)) failed: not an oop</li>
        <li>JDK-8247408: IdealGraph bit check expression canonicalization</li>
        <li>JDK-8247432: Update IANA Language Subtag Registry to Version 2020-09-29</li>
        <li>JDK-8247438: JShell: When FailOverExecutionControlProvider fails the proximal cause is not shown</li>
        <li>JDK-8247753: UIManager.getSytemLookAndFeelClassName() returns wrong value on Fedora 32</li>
        <li>JDK-8248043: Need to eliminate excessive i2l conversions</li>
        <li>JDK-8248411: [aarch64] Insufficient error handling when CodeBuffer is exhausted</li>
        <li>JDK-8248568: compiler/c2/TestBit.java failed: test missing from stdout/stderr</li>
        <li>JDK-8248870: AARCH64: I2L/L2I conversions can be skipped for masked positive values</li>
        <li>JDK-8249142: java/awt/FontClass/CreateFont/DeleteFont.sh is unstable</li>
        <li>JDK-8249189: AARCH64: more L2I conversions can be skipped</li>
        <li>JDK-8249719: MethodHandle performance suffers from bad ResolvedMethodTable hash function</li>
        <li>JDK-8249875: GCC 10 warnings -Wtype-limits with JFR code</li>
        <li>JDK-8250635: MethodArityHistogram should use Compile_lock in favour of fancy checks</li>
        <li>JDK-8250876: Fix issues with cross-compile on macos</li>
        <li>JDK-8251031: Some vmTestbase/nsk/monitoring/RuntimeMXBean tests fail with hostnames starting from digits</li>
        <li>JDK-8251525: AARCH64: Faster Math.signum(fp)</li>
        <li>JDK-8252259: AArch64: Adjust default value of FLOATPRESSURE</li>
        <li>JDK-8252311: AArch64: save two words in itable lookup stub</li>
        <li>JDK-8252779: compiler/graalunit/HotspotTest.java failed after 8251525</li>
        <li>JDK-8252883: AccessDeniedException caused by delayed file deletion on Windows</li>
        <li>JDK-8253167: ARM32 builds fail after JDK-8247910</li>
        <li>JDK-8253572: [windows] CDS archive may fail to open with long file names</li>
        <li>JDK-8253923: C2 doesn't always run loop opts for compilations that include loops</li>
        <li>JDK-8253948: Memory leak in ImageFileReader</li>
        <li>JDK-8254631: Better support ALPN byte wire values in SunJSSE</li>
        <li>JDK-8254717: isAssignableFrom checks in KeyFactorySpi.engineGetKeySpec appear to be backwards</li>
        <li>JDK-8255086: Update the root locale display names</li>
        <li>JDK-8255625: AArch64: Implement Base64.encodeBlock accelerator/intrinsic</li>
        <li>JDK-8255763: C2: OSR miscompilation caused by invalid memory instruction placement</li>
        <li>JDK-8255992: JFR EventWriter does not use first string from StringPool with id 0</li>
        <li>JDK-8256037: [TESTBUG] com/sun/jndi/dns/ConfigTests/PortUnreachable.java fails due to the hard coded threshold is small</li>
        <li>JDK-8256244: java/lang/ProcessHandle/PermissionTest.java fails with TestNG 7.1</li>
        <li>JDK-8256287: [windows] add loop fuse to map_or_reserve_memory_aligned</li>
        <li>JDK-8256523: Streamline Java SHA2 implementation</li>
        <li>JDK-8257414: Drag n Drop target area is wrong on high DPI systems</li>
        <li>JDK-8257569: Failure observed with JfrVirtualMemory::initialize</li>
        <li>JDK-8257574: C2: "failed: parsing found no loops but there are some" assert failure</li>
        <li>JDK-8257580: Bump update version for OpenJDK: jdk-11.0.12</li>
        <li>JDK-8257604: JNI_ArgumentPusherVaArg leaks valist</li>
        <li>JDK-8257621: JFR StringPool misses cached items across consecutive recordings</li>
        <li>JDK-8257796: [TESTBUG] TestUseSHA512IntrinsicsOptionOnSupportedCPU.java fails on x86_32</li>
        <li>JDK-8257822: C2 crashes with SIGFPE due to a division that floats above its zero check</li>
        <li>JDK-8257828: SafeFetch may crash if invoked in non-JavaThreads</li>
        <li>JDK-8257853: Remove dependencies on JNF's JNI utility functions in AWT and 2D code</li>
        <li>JDK-8257858: [macOS]: Remove JNF dependency from libosxsecurity/KeystoreImpl.m</li>
        <li>JDK-8257860: [macOS]: Remove JNF dependency from libosxkrb5/SCDynamicStoreConfig.m</li>
        <li>JDK-8257988: Remove JNF dependency from libsaproc/MacosxDebuggerLocal.m</li>
        <li>JDK-8258414: OldObjectSample events too expensive</li>
        <li>JDK-8258505: [TESTBUG] TestDivZeroWithSplitIf.java fails due to missing UnlockDiagnosticVMOptions</li>
        <li>JDK-8258753: StartTlsResponse.close() hangs due to synchronization issues</li>
        <li>JDK-8259061: C2: assert(found) failed: memory-writing node is not placed in its original loop or an ancestor of it</li>
        <li>JDK-8259227: C2 crashes with SIGFPE due to a division that floats above its zero check</li>
        <li>JDK-8259232: Bad JNI lookup during printing</li>
        <li>JDK-8259276: C2: Empty expression stack when reexecuting tableswitch/lookupswitch instructions after deoptimization</li>
        <li>JDK-8259343: [macOS] Update JNI error handling in Cocoa code.</li>
        <li>JDK-8259585: Accessible actions do not work on mac os x</li>
        <li>JDK-8259651: [macOS] Replace JNF_COCOA_ENTER/EXIT macros</li>
        <li>JDK-8259662: Don't wrap SocketExceptions into SSLExceptions in SSLSocketImpl</li>
        <li>JDK-8259710: Inlining trace leaks memory</li>
        <li>JDK-8259729: Missed JNFInstanceOf -> IsInstanceOf conversion</li>
        <li>JDK-8259777: Incorrect predication condition generated by ADLC</li>
        <li>JDK-8259786: initialize last parameter of getpwuid_r</li>
        <li>JDK-8259843: initialize dli_fname array before calling dll_address_to_library_name</li>
        <li>JDK-8259869: [macOS] Remove desktop module dependencies on JNF Reference APIs</li>
        <li>JDK-8259886: Improve SSL session cache performance and scalability</li>
        <li>JDK-8259983: do not use uninitialized expand_ms value in G1CollectedHeap::expand_heap_after_young_collection</li>
        <li>JDK-8260030: Improve stringStream buffer handling</li>
        <li>JDK-8260236: better init AnnotationCollector _contended_group</li>
        <li>JDK-8260255: C1: LoopInvariantCodeMotion constructor can leave some fields uninitialized</li>
        <li>JDK-8260284: C2: assert(_base == Int) failed: Not an Int</li>
        <li>JDK-8260380: Upgrade to LittleCMS 2.12</li>
        <li>JDK-8260420: C2 compilation fails with assert(found_sfpt) failed: no node in loop that's not input to safepoint</li>
        <li>JDK-8260426: awt debug_mem.c DMem_AllocateBlock might leak memory</li>
        <li>JDK-8260432: allocateSpaceForGP in freetypeScaler.c might leak memory</li>
        <li>JDK-8260616: Removing remaining JNF dependencies in the java.desktop module</li>
        <li>JDK-8260653: Unreachable nodes keep speculative types alive</li>
        <li>JDK-8260707: java/lang/instrument/PremainClass/InheritAgent0100.java times out</li>
        <li>JDK-8260925: HttpsURLConnection does not work  with other JSSE provider.</li>
        <li>JDK-8260926: Trace resource exhausted events unconditionally</li>
        <li>JDK-8261020: Wrong format parameter in create_emergency_chunk_path</li>
        <li>JDK-8261027: AArch64: Support for LSE atomics C++ HotSpot code</li>
        <li>JDK-8261167: print_process_memory_info add a close call after fopen</li>
        <li>JDK-8261170: Upgrade to freetype 2.10.4</li>
        <li>JDK-8261198: [macOS] Incorrect JNI parameters in number conversion in A11Y code</li>
        <li>JDK-8261235: C1 compilation fails with assert(res->vreg_number() == index) failed: conversion check</li>
        <li>JDK-8261261: The version extra fields needs to be overridable in jib-profiles.js</li>
        <li>JDK-8261262: Kitchensink24HStress.java crashed with EXCEPTION_ACCESS_VIOLATION</li>
        <li>JDK-8261354: SIGSEGV at MethodIteratorHost</li>
        <li>JDK-8261355: No data buffering in SunPKCS11 Cipher encryption when the underlying mechanism has no padding</li>
        <li>JDK-8261397: try catch Method failing to work when dividing an integer by 0</li>
        <li>JDK-8261422: Adjust problematic String.format calls in jdk/internal/util/Preconditions.java outOfBoundsMessage</li>
        <li>JDK-8261447: MethodInvocationCounters frequently run into overflow</li>
        <li>JDK-8261481: Cannot read Kerberos settings in dynamic store on macOS Big Sur</li>
        <li>JDK-8261505: Test test/hotspot/jtreg/gc/parallel/TestDynShrinkHeap.java killed by Linux OOM Killer</li>
        <li>JDK-8261601: free memory in early return in Java_sun_nio_ch_sctp_SctpChannelImpl_receive0</li>
        <li>JDK-8261649: AArch64: Optimize LSE atomics in C++ code</li>
        <li>JDK-8261730: C2 compilation fails with assert(store->find_edge(load) != -1) failed: missing precedence edge</li>
        <li>JDK-8261752: Multiple GC test are missing memory requirements</li>
        <li>JDK-8261791: (sctp) handleSendFailed in SctpChannelImpl.c potential leaks</li>
        <li>JDK-8261812: C2 compilation fails with assert(!had_error) failed: bad dominance</li>
        <li>JDK-8261914: IfNode::fold_compares_helper faces non-canonicalized bool when running JRuby JSON workload</li>
        <li>JDK-8262093: java/util/concurrent/tck/JSR166TestCase.java failed "assert(false) failed: unexpected node"</li>
        <li>JDK-8262110: DST starts from incorrect time in 2038</li>
        <li>JDK-8262121: [11u] Redo 8244287: JFR: Methods samples have line number 0</li>
        <li>JDK-8262163: Extend settings printout in jcmd VM.metaspace</li>
        <li>JDK-8262295: C2: Out-of-Bounds Array Load from Clone Source</li>
        <li>JDK-8262298: G1BarrierSetC2::step_over_gc_barrier fails with assert "bad barrier shape"</li>
        <li>JDK-8262446: DragAndDrop hangs on Windows</li>
        <li>JDK-8262461: handle wcstombsdmp return value correctly in unix awt_InputMethod.c</li>
        <li>JDK-8262465: Very long compilation times and high memory consumption in C2 debug builds</li>
        <li>JDK-8262726: AArch64: C1 StubAssembler::call_RT can corrupt stack</li>
        <li>JDK-8262739: String inflation C2 intrinsic prevents insertion of anti-dependencies</li>
        <li>JDK-8262829: Native crash in Win32PrintServiceLookup.getAllPrinterNames()</li>
        <li>JDK-8262837: handle split_USE correctly</li>
        <li>JDK-8262900: ToolBasicTest fails to access HTTP server it starts</li>
        <li>JDK-8263260: [s390] Support latest hardware (z14 and z15)</li>
        <li>JDK-8263311: Watch registry changes for remote printers update instead of polling</li>
        <li>JDK-8263361: Incorrect arraycopy stub selected by C2 for SATB collectors</li>
        <li>JDK-8263404: RsaPrivateKeySpec is always recognized as RSAPrivateCrtKeySpec in RSAKeyFactory.engineGetKeySpec</li>
        <li>JDK-8263425: AArch64: two potential bugs in C1 LIRGenerator::generate_address()</li>
        <li>JDK-8263448: CTW: fatal error: meet not symmetric</li>
        <li>JDK-8263504: Some OutputMachOpcodes fields are uninitialized</li>
        <li>JDK-8263557: Possible NULL dereference in Arena::destruct_contents()</li>
        <li>JDK-8263558: Possible NULL dereference in fast path arena free if ZapResourceArea is true</li>
        <li>JDK-8263676: AArch64: one potential bug in C1 LIRGenerator::generate_address()</li>
        <li>JDK-8263729: [test] divert spurious output away from stream under test in ProcessBuilder Basic test</li>
        <li>JDK-8263846: Bad JNI lookup getFocusOwner in accessibility code on Mac OS X</li>
        <li>JDK-8264047: Duplicate global variable 'jvm' in libjavajpeg and libawt</li>
        <li>JDK-8264096: slowdebug jvm crashes when StrInflatedCopy match rule is not supported</li>
        <li>JDK-8264151: ciMethod::ensure_method_data() should return false is loading resulted in empty state</li>
        <li>JDK-8264173: [s390] Improve Hardware Feature Detection And Reporting</li>
        <li>JDK-8264190: Harden TLS interop tests</li>
        <li>JDK-8264223: CodeHeap::verify fails extra_hops assertion in fastdebug test</li>
        <li>JDK-8264328: Broken license in javax/swing/JComboBox/8072767/bug8072767.java</li>
        <li>JDK-8264360: Loop strip mining verification fails with "should be on the backedge"</li>
        <li>JDK-8264626: C1 should be able to inline excluded methods</li>
        <li>JDK-8264640: CMS ParScanClosure misses a barrier</li>
        <li>JDK-8264786: [macos] All Swing/AWT apps cause Allow Notifications prompt to appear when app is launched</li>
        <li>JDK-8264821: DirectIOTest fails on a system with large block size</li>
        <li>JDK-8264848: [macos] libjvm.dylib linker warning due to macOS version mismatch</li>
        <li>JDK-8264923: PNGImageWriter.write_zTXt throws Exception with a typo</li>
        <li>JDK-8264958: C2 compilation fails with assert "n is later than its clone"</li>
        <li>JDK-8265099: Revert backport to 11u of 8236859: WebSocket over authenticating proxy fails with NPE</li>
        <li>JDK-8265154: vinserti128 operand mix up for KNL platforms</li>
        <li>JDK-8265239: Shenandoah: Shenandoah heap region count could be off by 1</li>
        <li>JDK-8265417: Backport of JDK-8249672 breaks Solaris x86 build</li>
        <li>JDK-8265421: java/lang/String/StringRepeat.java test is missing a memory requirement</li>
        <li>JDK-8265462: Handle multiple slots in the NSS Internal Module from SunPKCS11's Secmod</li>
        <li>JDK-8265537: x86 version string truncated after JDK-8249672 11u backport</li>
        <li>JDK-8265666: Enable AIX build platform to make external debug symbols</li>
        <li>JDK-8265677: CMS: CardTableBarrierSet::write_ref_array_work() lacks storestore barrier</li>
        <li>JDK-8265690: Use the latest Ubuntu base image version in Docker testing</li>
        <li>JDK-8265718: Build failure after JDK-8258414 11u backport</li>
        <li>JDK-8265750: Fatal error in safepoint.cpp after backport of 8258414</li>
        <li>JDK-8265784: [C2] Hoisting of DecodeN leaves MachTemp inputs behind</li>
        <li>JDK-8265938: C2's conditional move optimization does not handle top Phi</li>
        <li>JDK-8266220: keytool still prompt for store password on a password-less pkcs12 file if -storetype pkcs12 is specified</li>
        <li>JDK-8266293: Key protection using PBEWithMD5AndDES fails with "java.security.InvalidAlgorithmParameterException: Salt must be 8 bytes long"</li>
        <li>JDK-8266713: [AIX] Build failure after 11u backport of JDK-8247753</li>
        <li>JDK-8266802: Shenandoah: Round up region size to page size unconditionally</li>
        <li>JDK-8266892: avoid maybe-uninitialized gcc warnings on linux s390x</li>
        <li>JDK-8266929: Unable to use algorithms from 3p providers</li>
        <li>JDK-8267235: [macos_aarch64] InterpreterRuntime::throw_pending_exception messing up LR results in crash</li>
        <li>JDK-8267561: Shenandoah: Reference processing not properly setup for outside of cycle degenerated GC</li>
        <li>JDK-8267599: Revert the change to the default PKCS12 macAlgorithm and macIterationCount props for 11u/8u/7u</li>
        <li>JDK-8267641: [11u] 8227609 backport typo</li>
        <li>JDK-8267721: Enable sun/security/pkcs11 tests for Amazon Linux 2 AArch64</li>
        <li>JDK-8268678: LetsEncryptCA.java test fails as Let’s Encrypt Authority X3 is retired</li>
      </ul>

      <h3>Notes on individual issues:</h3>

      <h4>security-libs/java.security:</h4>

      <h5>JDK-8215293: Customizing PKCS12 keystore Generation</h5>

      New system and security properties have been added to enable users to
      customize the generation of PKCS #12 keystores. This includes
      algorithms and parameters for key protection, certificate protection,
      and MacData. The detailed explanation and possible values for these
      properties can be found in the "PKCS12 KeyStore properties" section of
      the `java.security` file.

      Also, support for the following SHA-2 based HmacPBE algorithms has
      been added to the SunJCE provider:

      * HmacPBESHA224
      * HmacPBESHA256
      * HmacPBESHA384
      * HmacPBESHA512
      * HmacPBESHA512/224
      * HmacPBESHA512/256

      <h5>JDK-8256902: Removed Root Certificates with 1024-bit Keys</h5>

      The following root certificates with weak 1024-bit RSA public keys
      have been removed from the `cacerts` keystore:

      Alias Name: thawtepremiumserverca [jdk]
      Distinguished Name: EMAILADDRESS=premium-server at thawte.com, CN=Thawte Premium Server CA, OU=Certification Services Division, O=Thawte Consulting cc, L=Cape Town, ST=Western Cape, C=ZA

      Alias Name: verisignclass2g2ca [jdk]
      Distinguished Name: OU=VeriSign Trust Network, OU="(c) 1998 VeriSign, Inc. - For authorized use only", OU=Class 2 Public Primary Certification Authority - G2, O="VeriSign, Inc.", C=US

      Alias Name: verisignclass3ca [jdk]
      Distinguished Name: OU=Class 3 Public Primary Certification Authority, O="VeriSign, Inc.", C=US

      Alias Name: verisignclass3g2ca [jdk]
      Distinguished Name: OU=VeriSign Trust Network, OU="(c) 1998 VeriSign, Inc. - For authorized use only", OU=Class 3 Public Primary Certification Authority - G2, O="VeriSign, Inc.", C=US

      Alias Name: verisigntsaca [jdk]
      Distinguished Name: CN=Thawte Timestamping CA, OU=Thawte Certification, O=Thawte, L=Durbanville, ST=Western Cape, C=ZA

      <h5>JDK-8261361: Removed Telia Company's Sonera Class2 CA certificate</h5>

      The following root certificate have been removed from the cacerts truststore:

      Alias Name: soneraclass2ca
      Distinguished Name: CN=Sonera Class2 CA, O=Sonera, C=FI

      <h5>JDK-8242069: Upgraded the Default PKCS12 Encryption and MAC Algorithms</h5>

      The default encryption and MAC algorithms used in a PKCS #12 keystore
      have been updated. The new algorithms are based on AES-256 and SHA-256
      and are stronger than the old algorithms that were based on RC2,
      DESede, and SHA-1. See the security properties starting with
      `keystore.pkcs12` in the `java.security` file for detailed
      information.

      For compatibility, a new system property named
      `keystore.pkcs12.legacy` is defined that will revert the algorithms to
      use the older, weaker algorithms. There is no value defined for this
      property.

      <h4>security-libs/javax.net.ssl:</h4>

      <h5>JDK-8257548: Improve Encoding of TLS Application-Layer Protocol Negotiation (ALPN) Values</h5>

      Certain TLS ALPN values couldn't be properly read or written by the
      SunJSSE provider. This is due to the choice of Strings as the API
      interface and the undocumented internal use of the UTF-8 Character Set
      which converts characters larger than U+00007F (7-bit ASCII) into
      multi-byte arrays that may not be expected by a peer.

      ALPN values are now represented using the network byte representation
      expected by the peer, which should require no modification for
      standard 7-bit ASCII-based character Strings. However, SunJSSE now
      encodes/decodes String characters as 8-bit ISO_8859_1/LATIN-1
      characters.  This means applications that used characters above
      U+000007F that were previously encoded using UTF-8 may need to either
      be modified to perform the UTF-8 conversion, or set the Java security
      property `jdk.tls.alpnCharset` to "UTF-8" revert the behavior.

      See the updated guide at
      https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/alpn.html
      for more information.

      <h5>JDK-8244460: Support for certificate_authorities Extension</h5>

      The "certificate_authorities" extension is an optional extension
      introduced in TLS 1.3. It is used to indicate the certificate
      authorities (CAs) that an endpoint supports and should be used by the
      receiving endpoint to guide certificate selection.

      With this JDK release, the "certificate_authorities" extension is
      supported for TLS 1.3 in both the client and the server sides.  This
      extension is always present for client certificate selection, while it
      is optional for server certificate selection.

      Applications can enable this extension for server certificate
      selection by setting the `jdk.tls.client.enableCAExtension` system
      property to `true`.  The default value of the property is `false`.

      Note that if the client trusts more CAs than the size limit of the
      extension (less than 2^16 bytes), the extension is not enabled.  Also,
      some server implementations do not allow handshake messages to exceed
      2^14 bytes.  Consequently, there may be interoperability issues when
      `jdk.tls.client.enableCAExtension` is set to `true` and the client
      trusts more CAs than the server implementation limit.

    </div>

    <div class="anchor">
      <a href="#jdk16_0_2_7" class="anchor"><img src="dist/assets/anchor.png" alt="anchor icon"></a>
      <h2 class="bold"><button type="button" onclick="showHideReleaseNotes('jdk16_0_2_7_notes');">-/+</button> <a id="jdk16_0_2_7">OpenJDK 16.0.2+7</a></h2>
    </div>
    <div class="margin-bottom softHide" id="jdk16_0_2_7_notes">

      You can check the details of these bugs using the <a href="https://bugs.openjdk.java.net/issues/?jql=project%20%3D%20JDK%20AND%20fixVersion%20%3D%2016.0.2" target="_blank">16.0.2</a> Fix Version filter in the JDK Bug System.

      <ul>
        <li>JDK-8271096: debug.cpp utilities should be available in product builds.</li>
        <li>JDK-8268317: PhaseStringOpts::int_stringSize doesn't handle min_jint correctly</li>
        <li>JDK-8268252: Inconsistent TLS protocol version in debug output</li>
        <li>JDK-8268252: Inconsistent TLS protocol version in debug output</li>
        <li>JDK-8268247: [macOS] All Swing/AWT apps cause Allow Notifications prompt to appear when app is launched</li>
        <li>JDK-8268246: SIGSEGV in get_current_contended_monitor</li>
        <li>JDK-8268243: StackOverflowError on open WindowsPreferences</li>
        <li>JDK-8268132: SIGSEGV at MethodIteratorHost</li>
        <li>JDK-8268028: NullPointerException in sun.security.ssl.HKDF.extract(HKDF.java:93)</li>
        <li>JDK-8267607: [macos_aarch64] InterpreterRuntime::throw_pending_exception messing up LR results in crash</li>
        <li>JDK-8267560: Shenandoah: Round up region size to page size unconditionally</li>
        <li>JDK-8267346: java -Xshare:dump -XX:DumpLoadedClassList=... crashes</li>
        <li>JDK-8267345: VM crashes during dumping classlist with -Xshare:dump option</li>
        <li>JDK-8267268: [BACKOUT] JDK-8196415 Disable SHA-1 Signed JARs</li>
        <li>JDK-8267195: Update LogCompilation junit to 4.13.1</li>
        <li>JDK-8267152: sun/hotspot/whitebox/CPUInfoTest.java fails on Ice Lake</li>
        <li>JDK-8267100: [BACKOUT] JDK-8196415 Disable SHA-1 Signed JARs</li>
        <li>JDK-8267058: Shenandoah: Shenandoah heap region count could be off by 1</li>
        <li>JDK-8266663: Enable AIX build platform to make external debug symbols</li>
        <li>JDK-8266659: TestRedirectLinks fails</li>
        <li>JDK-8266656: assert root method not found in witnessed_reabstraction_in_supers is too strong</li>
        <li>JDK-8266538: No data buffering in SunPKCS11 Cipher encryption when the underlying mechanism has no padding</li>
        <li>JDK-8266428: JVM crash with assert(Universe::heap()->is_in(result)) failed: object not in heap</li>
        <li>JDK-8266325: doc/building.md should mention homebrew install freetype</li>
        <li>JDK-8266205: Update milestone to fcs for jdk16.0.2+4</li>
        <li>JDK-8265530: OldObjectSample events too expensive</li>
        <li>JDK-8265402: Remove Telia Company CA certificate expiring in April 2021</li>
        <li>JDK-8265194: C2: Out-of-Bounds Array Load from Clone Source</li>
        <li>JDK-8265141: Duplicate global variable 'jvm' in libjavajpeg and libawt</li>
        <li>JDK-8265068: TimeZone getOffset API does not  return a DST offset between years 2038-2137</li>
        <li>JDK-8264904: DST starts from incorrect time in 2038</li>
        <li>JDK-8264840: Shenandoah: Remove leftover parallel reference processing argument</li>
        <li>JDK-8264784: Possible NULL dereference in fast path arena free if ZapResourceArea is true</li>
        <li>JDK-8264627: Don't wrap SocketExceptions into SSLExceptions in SSLSocketImpl</li>
        <li>JDK-8264537: gtest/GTestWrapper.java vmErrorTest.unimplemented1_vm_assert failed</li>
        <li>JDK-8264511: Potential memory leaks in JVMTI after JDK-8227745</li>
        <li>JDK-8264506: Consolidate POSIX code for runtime exit support: os::shutdown</li>
        <li>JDK-8264451: Kitchensink24HStress.java crashed with EXCEPTION_ACCESS_VIOLATION</li>
        <li>JDK-8264362: Disable SHA-1 Signed JARs</li>
        <li>JDK-8264339: Disable SHA-1 Signed JARs</li>
        <li>JDK-8264276: CDS: java/lang/ModuleLayer.EMPTY_LAYER should be singleton</li>
        <li>JDK-8264168: StartTlsResponse.close() hangs due to synchronization issues</li>
        <li>JDK-8263962: C2: JVMS not cloned when needs_clone_jvms() is true</li>
        <li>JDK-8263957: (fs) FileStore.supportsFileAttributeView might return false negative in case of ext3</li>
        <li>JDK-8263956: Exclude some failing tests from security/infra/java/security/cert/CertPathValidator</li>
        <li>JDK-8263941: Test test/hotspot/jtreg/gc/parallel/TestDynShrinkHeap.java killed by Linux OOM Killer</li>
        <li>JDK-8263939: better init AnnotationCollector _contended_group</li>
        <li>JDK-8263937: Remove Shenandoah leftovers from ReferenceProcessor</li>
        <li>JDK-8263932: C4530 was reported from VS 2019 at access bridge</li>
        <li>JDK-8263874: Uninitialized Method* variables after JDK-8233913</li>
        <li>JDK-8263872: Possible NULL dereference in Arena::destruct_contents()</li>
        <li>JDK-8263808: Watch registry changes for remote printers update instead of polling</li>
        <li>JDK-8263598: DragAndDrop hangs on Windows</li>
        <li>JDK-8263581: IfNode::fold_compares_helper faces non-canonicalized bool when running JRuby JSON workload</li>
        <li>JDK-8263299: try catch Method failing to work when dividing an integer by 0</li>
        <li>JDK-8263298: x86 32-bit build fails when -fcf-protection is passed in the compiler flags</li>
        <li>JDK-8263297: "jdk/dynalink/TypeConverterFactoryMemoryLeakTest.java failed with ""AssertionError: Should have GCd a method handle by now"""</li>
        <li>JDK-8263296: Multiple GC test are missing memory requirements</li>
        <li>JDK-8263295: Shenandoah: re-organize saving/restoring machine state in assembler code</li>
        <li>JDK-8263294: GitHub actions should use MSVC 14.28</li>
        <li>JDK-8263293: jpackage tests fail when Desktop is not supported</li>
        <li>JDK-8263292: Epsilon: clean up unused includes</li>
        <li>JDK-8263291: UseCompressedClassPointers depends on UseCompressedOops in vmError.cpp</li>
        <li>JDK-8263290: Code IfNode::fold_compares_helper more defensively</li>
        <li>JDK-8263289: Regression introduced with JDK-8250984 - memory might be null in some machines</li>
        <li>JDK-8263288: Several test failures due to javax.net.ssl.SSLException: Connection reset</li>
        <li>JDK-8263287: Crash caused by lambda proxy class loaded in Shutdown hook</li>
        <li>JDK-8263286: [TESTBUG] gc/g1/TestGCLogMessages.java fails if ergonomics detect too small InitialHeapSize</li>
        <li>JDK-8263285: AccessDeniedException caused by delayed file deletion on Windows</li>
        <li>JDK-8263284: Epsilon: improve performance under contention during virtual space expansion</li>
        <li>JDK-8263283: Zero error reporting is broken after JDK-8255711</li>
        <li>JDK-8263282: Zero: skip serviceability/sa tests</li>
        <li>JDK-8263281: java/lang/StringBuilder/HugeCapacity.java fails without Compact Strings</li>
        <li>JDK-8263280: runtime/cds/serviceability/ReplaceCriticalClassesForSubgraphs.java fails without CompactStrings</li>
        <li>JDK-8263279: Shenandoah: Rename store-val to IU-barrier</li>
        <li>JDK-8263278: Add Shenandoah test config to compiler/gcbarriers/UnsafeIntrinsicsTest.java</li>
        <li>JDK-8263277: Shenandoah: Use object size for full GC humongous compaction</li>
        <li>JDK-8263276: Shenandoah: Disable class-unloading in I-U mode</li>
        <li>JDK-8263275: Shenandoah: ShenandoahMarkingContext asserts are unnecessary</li>
        <li>JDK-8263274: Shenandoah: uninitialized label in VerifyThreadGCState</li>
        <li>JDK-8263273: Shenandoah: Full GC does not need to remark threads and drain SATB buffers</li>
        <li>JDK-8263272: gc/shenandoah/mxbeans tests fail with -Xcomp</li>
        <li>JDK-8263267: Upgrade to FreeType 2.10.4</li>
        <li>JDK-8263020: Native crash in Win32PrintServiceLookup.getAllPrinterNames()</li>
        <li>JDK-8262771: WindowsFileAttributes does not know about Unix domain sockets</li>
        <li>JDK-8262770:  Double-rounding possibility in float fma</li>
        <li>JDK-8262769: runtime/jni/checked/TestCheckedReleaseArrayElements.java fails with stderr not empty</li>
        <li>JDK-8262767: Using -Xcheck:jni can lead to a double-free after JDK-8193234</li>
        <li>JDK-8262765: NMT: tuning statistic shows incorrect hash distribution</li>
        <li>JDK-8262763: aarch64: fix typo in verify_oop_array</li>
        <li>JDK-8262253: [PPC64] AES intrinsics write beyond the destination array</li>
        <li>JDK-8262252: Restore HandleArea used in Deoptimization::uncommon_trap</li>
        <li>JDK-8262251: Cannot programmatically retrieve Metaspace max set via JAVA_TOOL_OPTIONS</li>
        <li>JDK-8262250: Wrong format in SAP copyright header of OsVersionTest</li>
        <li>JDK-8262249: The version extra fields needs to be overridable in jib-profiles.js</li>
        <li>JDK-8262248: Test java/lang/System/OsVersionTest.java still failing on BigSur patch versions after JDK-8253702</li>
        <li>JDK-8262247: BigSur version number reported as 10.16</li>
        <li>JDK-8262246: Fix incorrect result of Math.abs() with char type</li>
        <li>JDK-8262245: isStandalone property: remove dependency on pretty-print</li>
        <li>JDK-8262243: Windows IME was disabled after DnD operation</li>
        <li>JDK-8262240: PPC64 Zero build fails with 'VMError::controlled_crash(int)::FunctionDescriptor functionDescriptor' has incomplete type and cannot be defined</li>
        <li>JDK-8261764: jdk/net/ExtendedSocketOption/AsynchronousSocketChannelNAPITest.java fails intermittently</li>
        <li>JDK-8261763: Dynalink leaks memory when generating type converters</li>
        <li>JDK-8261762: Upgrade to LittleCMS 2.12</li>
        <li>JDK-8261761: XML declaration is not followed by a newline</li>
        <li>JDK-8261488: testlibrary_tests/ctw/JarDirTest.java fails with InvalidPathException on windows</li>
        <li>JDK-8261389: C2: assert(false) failed: unscheduable graph</li>
        <li>JDK-8261388: AArch64: Wrong code generated for shifting right and accumulating four unsigned short integers</li>
        <li>JDK-8261387: Remove EA from JDK 16 version string starting with Initial RC promotion on Feb 04</li>
        <li>JDK-8261386: ParallelGC: oldgen expansion needs release-store for _end</li>
        <li>JDK-8261385: StringBuilder::insert is incorrect without Compact Strings</li>
        <li>JDK-8261382: Add 2 HARICA roots to cacerts truststore</li>
        <li>JDK-8261381: (tz) Upgrade time-zone data to tzdata2021a</li>
        <li>JDK-8261380: ProblemList two security/krb5 tests on Linux</li>
        <li>JDK-8260997: Final nroff manpage update for JDK 16</li>
        <li>JDK-8260996: JFR: Events dropped when streaming over a chunk rotation</li>
        <li>JDK-8260995: [vector] ZGC: VectorReshape test produces incorrect results with ZGC enabled</li>
        <li>JDK-8260994: Build failures after JDK-8253353</li>
        <li>JDK-8260993: JVM crashes when executing PhaseIdealLoop::match_fill_loop</li>
        <li>JDK-8260992: add a regression test for 8260370</li>
        <li>JDK-8260991: Crash in C2: guarantee(n != NULL) failed: No Node</li>
        <li>JDK-8260990: ZGC: Handle incorrect processor id reported by the operating system</li>
        <li>JDK-8260989: C2: LoopLimit node is not eliminated</li>
        <li>JDK-8260988: C2 compilation fails with assert(vtable_index == Method::invalid_vtable_index) failed: correct sentinel value</li>
        <li>JDK-8260987: Uninitialized variable after JDK-8257513</li>
        <li>JDK-8260986: AllocateUninitializedArray C2 intrinsic fails with void.class input</li>
        <li>JDK-8260985: Some fields in HaltNode is not cloned</li>
        <li>JDK-8260984: Incorrect encoding of AVX-512 kmovq instruction</li>
        <li>JDK-8260983: C1: 3-arg StubAssembler::call_RT stack-use condition is incorrect</li>
        <li>JDK-8260982: Incorrect predication condition generated by ADLC</li>
        <li>JDK-8260981: Misplaced curly brace in Matcher::find_shared_post_visit</li>
        <li>JDK-8260980: "C2: assert failed (""Bad derived pointer"") with -XX:+VerifyRegisterAllocator"</li>
        <li>JDK-8260979: Fix optimization-unstable code involving signed integer overflow</li>
        <li>JDK-8259606: C2: assert((constant_addr - _masm.code()->consts()->start()) == con.offset())</li>
        <li>JDK-8258473: JCE doesn't provide any class to handle RSA private key in PKCS#1</li>
      </ul>
    </div>

    <div style="margin-top: 3rem;">
      <a href="./supported_platforms.html" class="no-underline home-links">
        <h2 class="inline-block zero-margin">Supported Platforms&nbsp;<i class="fa fa-arrow-circle-o-right" aria-hidden="true"></i></h2>
      </a>
      <a href="https://github.com/adoptium/adoptium-support/issues" class="no-underline home-links">
        <h2 class="inline-block zero-margin">Submit an Issue&nbsp;<i class="fa fa-arrow-circle-o-right" aria-hidden="true"></i></h2>
      </a>
       
    </div>
  </div>

</main>

{{> footer }}
